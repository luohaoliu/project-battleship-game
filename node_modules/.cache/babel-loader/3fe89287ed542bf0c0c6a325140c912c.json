{"ast":null,"code":"var _jsxFileName = \"/Users/loulau/Documents/react/project-battleship-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const Ship = (shipName, shipArray) => {\n    let shipCoordinates = [];\n    let j = 0;\n\n    while (j < shipArray.length) {\n      shipCoordinates.push({\n        coordinate: shipArray[j],\n        hit: false,\n        sink: false,\n        name: shipName\n      });\n      j++;\n    }\n\n    const isSunk = () => {\n      let counter = 0;\n\n      for (let i = 0; i < shipCoordinates.length; i++) {\n        if (shipCoordinates[i].hit === true) {\n          counter++;\n        }\n      }\n\n      if (counter === shipCoordinates.length) {\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          shipCoordinates[i].sink = true;\n        }\n      }\n    };\n\n    const hit = coordinateChosenByEnemy => {\n      for (let i = 0; i < shipCoordinates.length; i++) {\n        if (shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          shipCoordinates[i].hit = true;\n        }\n      }\n\n      isSunk();\n    };\n\n    return {\n      shipCoordinates,\n      hit\n    };\n  };\n\n  const playerGameBoard = () => {\n    let playerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n    const playerCarrier = Ship(\"carrier\", playerCarrierArray);\n    let playerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n    const playerBattleship = Ship(\"battleship\", playerBattleshipArray);\n    let playerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n    const playerCruiser = Ship(\"cruiser\", playerCruiserArray);\n    let playerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n    const playerSubmarine = Ship(\"submarine\", playerSubmarineArray);\n    let playerDestroyerArray = [\"A5\", \"B5\"];\n    const playerDestroyer = Ship(\"destroyer\", playerDestroyerArray);\n    let computerPlayerMissedShots = [];\n    let computerPlayerHitShots = [];\n\n    const receiveComputerAttack = coordinateChosenByEnemy => {\n      let targetFound = false;\n\n      for (let i = 0; i < playerCarrier.shipCoordinates.length; i++) {\n        if (playerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerCarrier.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          computerPlayerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < playerBattleship.shipCoordinates.length; i++) {\n        if (playerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerBattleship.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          computerPlayerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < playerCruiser.shipCoordinates.length; i++) {\n        if (playerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerCruiser.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          computerPlayerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < playerSubmarine.shipCoordinates.length; i++) {\n        if (playerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerSubmarine.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          computerPlayerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < playerDestroyer.shipCoordinates.length; i++) {\n        if (playerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerDestroyer.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          computerPlayerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      if (targetFound === false) {\n        computerPlayerMissedShots.push(coordinateChosenByEnemy);\n      }\n    };\n\n    return {\n      playerBattleship,\n      playerCruiser,\n      playerSubmarine,\n      playerCarrier,\n      playerDestroyer,\n      receiveComputerAttack,\n      computerPlayerMissedShots,\n      computerPlayerHitShots,\n      playerCarrierArray,\n      playerBattleshipArray,\n      playerCruiserArray,\n      playerSubmarineArray,\n      playerDestroyerArray\n    };\n  };\n\n  const computerGameBoard = () => {\n    let computerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n    const computerCarrier = Ship(\"carrier\", computerCarrierArray);\n    let computerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n    const computerBattleship = Ship(\"battleship\", computerBattleshipArray);\n    let computerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n    const computerCruiser = Ship(\"cruiser\", computerCruiserArray);\n    let computerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n    const computerSubmarine = Ship(\"submarine\", computerSubmarineArray);\n    let computerDestroyerArray = [\"A5\", \"B5\"];\n    const computerDestroyer = Ship(\"destroyer\", computerDestroyerArray);\n    let playerMissedShots = [];\n    let playerHitShots = [];\n\n    const receivePlayerAttack = coordinateChosenByEnemy => {\n      let targetFound = false;\n\n      for (let i = 0; i < computerCarrier.shipCoordinates.length; i++) {\n        if (computerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerCarrier.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < computerBattleship.shipCoordinates.length; i++) {\n        if (computerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerBattleship.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < computerCruiser.shipCoordinates.length; i++) {\n        if (computerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerCruiser.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < computerSubmarine.shipCoordinates.length; i++) {\n        if (computerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerSubmarine.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < computerDestroyer.shipCoordinates.length; i++) {\n        if (computerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerDestroyer.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      if (targetFound === false) {\n        playerMissedShots.push(coordinateChosenByEnemy);\n      }\n    };\n\n    return {\n      computerCarrier,\n      computerBattleship,\n      computerCruiser,\n      computerSubmarine,\n      computerDestroyer,\n      receivePlayerAttack,\n      playerMissedShots,\n      playerHitShots,\n      computerCarrierArray,\n      computerBattleshipArray,\n      computerCruiserArray,\n      computerSubmarineArray,\n      computerDestroyerArray\n    };\n  };\n\n  const player = () => {\n    let allPlayerChoices = [];\n    let playerChoice = [];\n    let count = 0;\n\n    const getCoordinateClickedByPlayer = coordinateClickedByPlayer => {\n      playerChoice.push(coordinateClickedByPlayer);\n\n      for (let i = 0; i < allPlayerChoices.length; i++) {\n        if (allPlayerChoices[i] !== playerChoice[0]) {\n          count += 1;\n        }\n      }\n\n      if (count === allPlayerChoices.length) {\n        allPlayerChoices = allPlayerChoices.concat(playerChoice);\n        gameLoop.computerShips.receivePlayerAttack(playerChoice[0]);\n      } else {\n        allPlayerChoices = allPlayerChoices.concat(playerChoice);\n      }\n\n      console.log(allPlayerChoices);\n      playerChoice = [];\n    };\n\n    return {\n      playerChoice,\n      allPlayerChoices,\n      getCoordinateClickedByPlayer\n    };\n  };\n\n  const computerPlayer = () => {\n    const availableCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\", \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\", \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\", \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\", \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\", \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\"];\n    let allComputerChoices = [];\n    let computerChoice = [];\n    let counter = 0;\n\n    const getRandomCoordinate = () => {\n      let oneRandomElement = availableCoordinates[Math.floor(Math.random() * availableCoordinates.length)];\n      computerChoice.push(oneRandomElement);\n\n      for (let i = 0; i < allComputerChoices.length; i++) {\n        if (allComputerChoices[i] !== computerChoice[0]) {\n          counter += 1;\n        }\n      }\n\n      if (counter === allComputerChoices.length) {\n        allComputerChoices = allComputerChoices.concat(computerChoice);\n        gameLoop.playerShips.receiveComputerAttack(computerChoice[0]);\n      } else {\n        allComputerChoices = allComputerChoices.concat(computerChoice);\n      }\n\n      computerChoice = [];\n    };\n\n    return {\n      computerChoice,\n      allComputerChoices,\n      getRandomCoordinate\n    };\n  };\n\n  const gameLoop = (() => {\n    const jeff = player();\n    const watson = computerPlayer();\n    const playerShips = playerGameBoard();\n    const computerShips = computerGameBoard();\n    return {\n      jeff,\n      watson,\n      playerShips,\n      computerShips\n    };\n  })(); // dom manipulation    \n\n\n  const gameBoardCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\", \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\", \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\", \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\", \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\", \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\"];\n  useEffect(() => {\n    let elements = document.getElementsByClassName('grid'); //player fleet should show up on the grid, not computer ones\n\n    for (let i = 0; i < elements.length; ++i) {\n      elements[i].addEventListener('click', changeColor); //hide coordinates on computer gameboard \n\n      if (gameLoop.playerShips.playerCarrierArray.some(particularElement => elements[i].id === particularElement) || gameLoop.playerShips.playerBattleshipArray.some(particularElement => elements[i].id === particularElement) || gameLoop.playerShips.playerCruiserArray.some(particularElement => elements[i].id === particularElement) || gameLoop.playerShips.playerSubmarineArray.some(particularElement => elements[i].id === particularElement) || gameLoop.playerShips.playerDestroyerArray.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"player-game-board\") {\n          elements[i].style.backgroundColor = \"blue\";\n        }\n      }\n\n      if (gameLoop.computerShips.playerMissedShots.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"computer-game-board\") {\n          elements[i].style.backgroundColor = \"yellow\";\n        }\n      }\n\n      if (gameLoop.playerGameBoard.computerPlayerMissedShots.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"player-game-board\") {\n          elements[i].style.backgroundColor = \"yellow\";\n        }\n      }\n\n      if (gameLoop.computerGameBoard.playerHitShots.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"player-game-board\") {\n          elements[i].style.backgroundColor = \"red\";\n        }\n      }\n    } //change yellow when there is a miss, red when there is a hit\n\n\n    function changeColor() {\n      let x = this.id;\n      gameLoop.playerGameBoard.getCoordinateClickedByPlayer(x);\n\n      if (this.parentNode.id === \"computer-game-board\") {\n        this.style.backgroundColor = \"yellow\";\n\n        if (gameLoop.computerShips.computerCarrierArray.some(particularElement => this.id === particularElement) || gameLoop.computerShips.computerBattleshipArray.some(particularElement => this.id === particularElement) || gameLoop.computerShips.computerCruiserArray.some(particularElement => this.id === particularElement) || gameLoop.computerShips.computerSubmarineArray.some(particularElement => this.id === particularElement) || gameLoop.computerShips.computerDestroyerArray.some(particularElement => this.id === particularElement)) {\n          this.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Battleship Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player Fleet V.S. Computer Fleet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: \"blue\",\n        color: \"white\"\n      },\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"player-game-board\",\n      children: gameBoardCoordinates.map(gameBoardCoordinate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          id: gameBoardCoordinate,\n          \"data-color\": \"yellow\",\n          style: {\n            backgroundColor: \"white\"\n          }\n        }, gameBoardCoordinate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"computer-game-board\",\n      children: gameBoardCoordinates.map(gameBoardCoordinate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          id: gameBoardCoordinate,\n          \"missed-color\": \"yellow\"\n        }, gameBoardCoordinate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/loulau/Documents/react/project-battleship-game/src/App.js"],"names":["React","useState","useEffect","App","Ship","shipName","shipArray","shipCoordinates","j","length","push","coordinate","hit","sink","name","isSunk","counter","i","coordinateChosenByEnemy","playerGameBoard","playerCarrierArray","playerCarrier","playerBattleshipArray","playerBattleship","playerCruiserArray","playerCruiser","playerSubmarineArray","playerSubmarine","playerDestroyerArray","playerDestroyer","computerPlayerMissedShots","computerPlayerHitShots","receiveComputerAttack","targetFound","computerGameBoard","computerCarrierArray","computerCarrier","computerBattleshipArray","computerBattleship","computerCruiserArray","computerCruiser","computerSubmarineArray","computerSubmarine","computerDestroyerArray","computerDestroyer","playerMissedShots","playerHitShots","receivePlayerAttack","player","allPlayerChoices","playerChoice","count","getCoordinateClickedByPlayer","coordinateClickedByPlayer","concat","gameLoop","computerShips","console","log","computerPlayer","availableCoordinates","allComputerChoices","computerChoice","getRandomCoordinate","oneRandomElement","Math","floor","random","playerShips","jeff","watson","gameBoardCoordinates","elements","document","getElementsByClassName","addEventListener","changeColor","some","particularElement","id","parentNode","style","backgroundColor","x","color","map","gameBoardCoordinate"],"mappings":"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","sourcesContent":["import './App.css'\nimport React, {useState, useEffect} from 'react';\n \nconst App = () => {\n\n  const Ship = (shipName, shipArray) => {\n      \n      let shipCoordinates = [];\n      \n      let j = 0;\n\n      while (j < shipArray.length) {\n\n        shipCoordinates.push({coordinate: shipArray[j], hit: false, sink: false, name: shipName });\n\n        j++;\n\n      }\n\n      const isSunk = () => {\n        let counter = 0;\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          if (shipCoordinates[i].hit === true) {\n            counter++;\n          }\n        }\n        if (counter === shipCoordinates.length) {\n          for (let i = 0; i < shipCoordinates.length; i++) {\n            shipCoordinates[i].sink = true;\n              \n          }\n        }\n      };\n      \n\n      const hit = (coordinateChosenByEnemy) => {  \n\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          if (shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            shipCoordinates[i].hit = true;\n          }\n        }\n\n        isSunk(); \n      };\n      \n      return {shipCoordinates, hit}; \n    }\n\n\n    const playerGameBoard = () => {\n\n      \n      let playerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n      const playerCarrier = Ship(\"carrier\", playerCarrierArray);\n\n      let playerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n      const playerBattleship = Ship(\"battleship\", playerBattleshipArray);\n\n      let playerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n      const playerCruiser = Ship(\"cruiser\", playerCruiserArray);\n      \n      let playerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n      const playerSubmarine = Ship(\"submarine\", playerSubmarineArray);\n        \n      let playerDestroyerArray = [\"A5\", \"B5\"];\n      const playerDestroyer = Ship(\"destroyer\", playerDestroyerArray);\n      \n      let computerPlayerMissedShots = [];\n\n      let computerPlayerHitShots = [];\n      \n      const receiveComputerAttack = (coordinateChosenByEnemy) => {\n\n        let targetFound = false;\n\n        for (let i = 0; i < playerCarrier.shipCoordinates.length; i++) {\n          \n          if (playerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerCarrier.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n        \n        for (let i = 0; i < playerBattleship.shipCoordinates.length; i++) {\n\n          if (playerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerBattleship.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < playerCruiser.shipCoordinates.length; i++) {\n\n          if (playerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerCruiser.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < playerSubmarine.shipCoordinates.length; i++) {\n\n          if (playerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerSubmarine.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < playerDestroyer.shipCoordinates.length; i++) {\n          \n          if (playerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerDestroyer.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n\n        } \n        \n        if (targetFound === false) {\n          computerPlayerMissedShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      return { playerBattleship, playerCruiser, playerSubmarine, playerCarrier, playerDestroyer, \n        receiveComputerAttack, computerPlayerMissedShots, computerPlayerHitShots,\n        playerCarrierArray, playerBattleshipArray, playerCruiserArray, playerSubmarineArray, playerDestroyerArray};\n    }\n\n\n    const computerGameBoard = () => {\n\n      let computerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n      const computerCarrier = Ship(\"carrier\", computerCarrierArray);\n      \n      let computerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n      const computerBattleship = Ship(\"battleship\", computerBattleshipArray);\n      \n      let computerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n      const computerCruiser = Ship(\"cruiser\", computerCruiserArray);\n      \n      let computerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n      const computerSubmarine = Ship(\"submarine\", computerSubmarineArray);\n      \n      let computerDestroyerArray =[\"A5\", \"B5\"];\n      const computerDestroyer = Ship(\"destroyer\", computerDestroyerArray);\n      \n\n      let playerMissedShots = [];\n      let playerHitShots = [];\n\n      const receivePlayerAttack = (coordinateChosenByEnemy) => {\n\n        let targetFound = false;\n\n        for (let i = 0; i < computerCarrier.shipCoordinates.length; i++) {\n          \n          if (computerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerCarrier.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < computerBattleship.shipCoordinates.length; i++) {\n\n          if (computerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerBattleship.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < computerCruiser.shipCoordinates.length; i++) {\n\n          if (computerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerCruiser.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < computerSubmarine.shipCoordinates.length; i++) {\n\n          if (computerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerSubmarine.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < computerDestroyer.shipCoordinates.length; i++) {\n\n          if (computerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerDestroyer.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        } \n        \n        if (targetFound === false) {\n          playerMissedShots.push(coordinateChosenByEnemy);\n\n        }\n        \n      }\n      \n      return {computerCarrier, computerBattleship, computerCruiser, computerSubmarine, computerDestroyer, \n        receivePlayerAttack, playerMissedShots, playerHitShots,\n        computerCarrierArray, computerBattleshipArray, computerCruiserArray, computerSubmarineArray, computerDestroyerArray}\n    \n    }\n\n\n\n    const player = () => { \n\n      let allPlayerChoices = [];\n      \n      let playerChoice = [];\n      \n      let count = 0;\n\n      const getCoordinateClickedByPlayer = (coordinateClickedByPlayer) => {\n        \n        playerChoice.push(coordinateClickedByPlayer);\n        \n      for (let i = 0; i < allPlayerChoices.length; i++) {\n        if (allPlayerChoices[i] !== playerChoice[0]) {\n          count += 1;        \n        } \n      }\n\n      if (count === allPlayerChoices.length) {\n        allPlayerChoices = allPlayerChoices.concat(playerChoice);\n        gameLoop.computerShips.receivePlayerAttack(playerChoice[0]);\n      } else {\n        allPlayerChoices = allPlayerChoices.concat(playerChoice);\n      }\n      console.log(allPlayerChoices);\n      playerChoice = [];\n\n\n\n    }\n      return {playerChoice, allPlayerChoices, getCoordinateClickedByPlayer}\n\n    }\n   \n\n    const computerPlayer = () => {\n\n      const availableCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\",\n                      \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\",\n                      \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\",\n                      \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\",\n                      \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\",\n                      \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n                      \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\",\n                      \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\",\n                      \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\",\n                      \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\",\n                    ];\n\n      let allComputerChoices = [];\n      \n      let computerChoice = [];\n      \n      let counter = 0;\n    \n    const getRandomCoordinate = () => {\n\n      let oneRandomElement = availableCoordinates[Math.floor(Math.random()*availableCoordinates.length)];\n      \n      computerChoice.push(oneRandomElement);\n      \n      for (let i = 0; i < allComputerChoices.length;i++) {\n        if (allComputerChoices[i] !== computerChoice[0]) {\n          counter += 1;        \n        } \n      }\n\n      if (counter === allComputerChoices.length) {\n        allComputerChoices = allComputerChoices.concat(computerChoice);\n        gameLoop.playerShips.receiveComputerAttack(computerChoice[0]);\n      } else {\n        allComputerChoices = allComputerChoices.concat(computerChoice);\n      }\n\n      computerChoice = [];\n      \n    }\n  \n    return {computerChoice, allComputerChoices, getRandomCoordinate}\n  \n  };\n\n  \n\n  \n  const gameLoop = (() => {\n    const jeff = player(); \n    const watson = computerPlayer();\n    const playerShips = playerGameBoard();\n    const computerShips = computerGameBoard();\n\n    return {jeff, watson, playerShips, computerShips}\n  })();\n\n  // dom manipulation    \n  const gameBoardCoordinates = \n                    [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\",\n                     \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\",\n                     \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\",\n                     \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\",\n                     \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\",\n                     \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n                     \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\",\n                     \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\",\n                     \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\",\n                     \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\",\n                    ];\n    \n    \n    useEffect(() =>  {\n    \n      let elements = document.getElementsByClassName('grid');\n    \n      //player fleet should show up on the grid, not computer ones\n      for (let i = 0; i < elements.length; ++i) {\n        elements[i].addEventListener('click', changeColor); //hide coordinates on computer gameboard \n        if(gameLoop.playerShips.playerCarrierArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        gameLoop.playerShips.playerBattleshipArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        gameLoop.playerShips.playerCruiserArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        gameLoop.playerShips.playerSubmarineArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        gameLoop.playerShips.playerDestroyerArray.some(particularElement=> elements[i].id === (particularElement))\n        ) {\n          if(elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"blue\";\n          }\n\n        }\n\n        if(gameLoop.computerShips.playerMissedShots.some(particularElement=> elements[i].id === (particularElement))) {\n          if(elements[i].parentNode.id === \"computer-game-board\") {\n            elements[i].style.backgroundColor = \"yellow\";\n          }\n        }\n\n        if(gameLoop.playerGameBoard.computerPlayerMissedShots.some(particularElement=> elements[i].id === (particularElement))) {\n          if(elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"yellow\";\n          }\n        }\n        \n        if(gameLoop.computerGameBoard.playerHitShots.some(particularElement=> elements[i].id === (particularElement))) {\n          if(elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"red\";\n          }\n        }\n\n      }\n\n\n      //change yellow when there is a miss, red when there is a hit\n      function changeColor() {\n          \n          let x = this.id;\n          gameLoop.playerGameBoard.getCoordinateClickedByPlayer(x);\n\n          if(this.parentNode.id === \"computer-game-board\") {\n            this.style.backgroundColor = \"yellow\"; \n            if(gameLoop.computerShips.computerCarrierArray.some(particularElement=> this.id === (particularElement)) ||\n            gameLoop.computerShips.computerBattleshipArray.some(particularElement=> this.id === (particularElement)) ||\n            gameLoop.computerShips.computerCruiserArray.some(particularElement=> this.id === (particularElement)) ||\n            gameLoop.computerShips.computerSubmarineArray.some(particularElement=> this.id === (particularElement)) ||\n            gameLoop.computerShips.computerDestroyerArray.some(particularElement=> this.id === (particularElement))\n            ) {\n              this.style.backgroundColor = \"red\";\n            }\n        }\n      }\n\n    })\n\n\n    return(\n      <div>\n        <h1>Battleship Game</h1>\n        <h2>Player Fleet V.S. Computer Fleet</h2>\n        <button style={{backgroundColor: \"blue\", color: \"white\"}}>start</button>\n    \n        <div className=\"container\" id=\"player-game-board\">\n          {gameBoardCoordinates.map((gameBoardCoordinate) => {\n \n          return <div className=\"grid\" key={gameBoardCoordinate} id={gameBoardCoordinate} data-color=\"yellow\"\n          style={{backgroundColor: \"white\"}}\n          ></div>\n          })}\n        </div>\n          \n\n        <div className=\"container\" id=\"computer-game-board\">\n          {gameBoardCoordinates.map((gameBoardCoordinate) => {\n          return <div className=\"grid\" key={gameBoardCoordinate} id={gameBoardCoordinate} missed-color=\"yellow\"\n          ></div>\n          })}\n        </div>\n\n\n      </div>\n    )\n}\n\n\nexport default App;\n  \n\n\n  \n\n\n\n"]},"metadata":{},"sourceType":"module"}