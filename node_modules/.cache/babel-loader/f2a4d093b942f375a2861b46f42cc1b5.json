{"ast":null,"code":"var _jsxFileName = \"/Users/loulau/Documents/react/project-battleship-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport uniqid from \"uniqid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const Ship = (shipName, shipArray) => {\n    let shipCoordinates = [];\n    let j = 0;\n\n    while (j < shipArray.length) {\n      shipCoordinates.push({\n        coordinate: shipArray[j],\n        hit: false,\n        sink: false,\n        name: shipName\n      });\n      j++;\n    }\n\n    const isSunk = () => {\n      let counter = 0;\n\n      for (let i = 0; i < shipCoordinates.length; i++) {\n        if (shipCoordinates[i].hit === true) {\n          counter++;\n        }\n      }\n\n      if (counter === shipCoordinates.length) {\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          shipCoordinates[i].sink = true;\n        }\n      }\n    };\n\n    const hit = coordinateChosenByEnemy => {\n      for (let i = 0; i < shipCoordinates.length; i++) {\n        if (shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          shipCoordinates[i].hit = true;\n        }\n      }\n    };\n\n    return {\n      shipCoordinates,\n      hit,\n      isSunk\n    };\n  };\n\n  const playerGameBoard = () => {\n    let playerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"]; //pre-determined coordinates\n\n    const playerCarrier = Ship(\"carrier\", playerCarrierArray);\n    let playerBattleshipArray = [\"J2\", \"J3\", \"J4\", \"J5\", \"J6\"];\n    const playerBattleship = Ship(\"battleship\", playerBattleshipArray);\n    let playerCruiserArray = [\"A6\", \"B6\", \"C6\"];\n    const playerCruiser = Ship(\"cruiser\", playerCruiserArray);\n    let playerSubmarineArray = [\"G8\", \"G9\", \"G10\"];\n    const playerSubmarine = Ship(\"submarine\", playerSubmarineArray);\n    let playerDestroyerArray = [\"A9\", \"A10\"];\n    const playerDestroyer = Ship(\"destroyer\", playerDestroyerArray);\n    let computerPlayerMissedShots = [];\n    let computerPlayerHitShots = [];\n\n    const receiveComputerAttack = coordinateChosenByEnemy => {\n      let targetFound = false;\n\n      for (let i = 0; i < playerCarrier.shipCoordinates.length; i++) {\n        if (playerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            playerCarrier.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      for (let i = 0; i < playerBattleship.shipCoordinates.length; i++) {\n        if (playerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            playerBattleship.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      for (let i = 0; i < playerCruiser.shipCoordinates.length; i++) {\n        if (playerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            playerCruiser.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      for (let i = 0; i < playerSubmarine.shipCoordinates.length; i++) {\n        if (playerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            playerSubmarine.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      for (let i = 0; i < playerDestroyer.shipCoordinates.length; i++) {\n        if (playerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            playerDestroyer.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            computerPlayerHitShots.push(coordinateChosenByEnemy);\n          } else {\n            let oneRandomCoordinate = gameBoardCoordinates[Math.floor(Math.random() * gameBoardCoordinates.length)];\n            receiveComputerAttack(oneRandomCoordinate);\n          }\n        }\n      }\n\n      if (targetFound === false) {\n        if (computerPlayerMissedShots.indexOf(coordinateChosenByEnemy) === -1) {\n          computerPlayerMissedShots.push(coordinateChosenByEnemy);\n          console.log(computerPlayerMissedShots);\n        } else {\n          let oneRandomCoordinate = gameBoardCoordinates[Math.floor(Math.random() * gameBoardCoordinates.length)];\n          receiveComputerAttack(oneRandomCoordinate);\n        }\n      }\n\n      let elements = document.getElementsByClassName('grid');\n\n      for (let i = 0; i < elements.length; i++) {\n        if (computerPlayerMissedShots.some(particularElement => elements[i].id === particularElement)) {\n          if (elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"yellow\";\n          }\n        }\n\n        if (computerPlayerHitShots.some(particularElement => elements[i].id === particularElement)) {\n          if (elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"red\";\n          }\n        }\n      }\n    };\n\n    return {\n      playerBattleship,\n      playerCruiser,\n      playerSubmarine,\n      playerCarrier,\n      playerDestroyer,\n      receiveComputerAttack,\n      computerPlayerMissedShots,\n      computerPlayerHitShots,\n      playerCarrierArray,\n      playerBattleshipArray,\n      playerCruiserArray,\n      playerSubmarineArray,\n      playerDestroyerArray\n    };\n  };\n\n  const computerGameBoard = () => {\n    let computerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n    const computerCarrier = Ship(\"carrier\", computerCarrierArray);\n    let computerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n    const computerBattleship = Ship(\"battleship\", computerBattleshipArray);\n    let computerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n    const computerCruiser = Ship(\"cruiser\", computerCruiserArray);\n    let computerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n    const computerSubmarine = Ship(\"submarine\", computerSubmarineArray);\n    let computerDestroyerArray = [\"A5\", \"B5\"];\n    const computerDestroyer = Ship(\"destroyer\", computerDestroyerArray);\n    let playerMissedShots = [];\n    let playerHitShots = [];\n\n    const receivePlayerAttack = coordinateChosenByEnemy => {\n      let targetFound = false;\n\n      for (let i = 0; i < computerCarrier.shipCoordinates.length; i++) {\n        if (computerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            computerCarrier.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      for (let i = 0; i < computerBattleship.shipCoordinates.length; i++) {\n        if (computerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            computerBattleship.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      for (let i = 0; i < computerCruiser.shipCoordinates.length; i++) {\n        if (computerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            computerCruiser.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      for (let i = 0; i < computerSubmarine.shipCoordinates.length; i++) {\n        if (computerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            computerSubmarine.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      for (let i = 0; i < computerDestroyer.shipCoordinates.length; i++) {\n        if (computerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          if (playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n            computerDestroyer.hit(coordinateChosenByEnemy);\n            targetFound = true;\n            playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n      }\n\n      if (targetFound === false) {\n        if (playerMissedShots.indexOf(coordinateChosenByEnemy) === -1) {\n          playerMissedShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      if (playerHitShots.length === 18) {\n        console.log(\"player wins\");\n      }\n    };\n\n    return {\n      computerCarrier,\n      computerBattleship,\n      computerCruiser,\n      computerSubmarine,\n      computerDestroyer,\n      receivePlayerAttack,\n      playerMissedShots,\n      playerHitShots,\n      computerCarrierArray,\n      computerBattleshipArray,\n      computerCruiserArray,\n      computerSubmarineArray,\n      computerDestroyerArray\n    };\n  };\n\n  const playerShips = playerGameBoard();\n  const computerShips = computerGameBoard();\n  const gameBoardCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\", \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\", \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\", \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\", \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\", \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\"];\n  useEffect(() => {\n    let elements = document.getElementsByClassName('grid');\n\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].parentNode.id === \"computer-game-board\") {\n        elements[i].addEventListener('click', updateStatus, {\n          once: true\n        });\n      }\n\n      if (playerShips.playerCarrierArray.some(particularElement => elements[i].id === particularElement) || playerShips.playerBattleshipArray.some(particularElement => elements[i].id === particularElement) || playerShips.playerCruiserArray.some(particularElement => elements[i].id === particularElement) || playerShips.playerSubmarineArray.some(particularElement => elements[i].id === particularElement) || playerShips.playerDestroyerArray.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"player-game-board\") {\n          elements[i].style.backgroundColor = \"blue\";\n        }\n      }\n    }\n\n    function updateStatus() {\n      let coordinatepickedbyPlayer = this.id;\n      computerShips.receivePlayerAttack(coordinatepickedbyPlayer);\n      let oneRandomCoordinate = gameBoardCoordinates[Math.floor(Math.random() * gameBoardCoordinates.length)];\n      playerShips.receiveComputerAttack(oneRandomCoordinate);\n\n      if (this.parentNode.id === \"computer-game-board\") {\n        if (computerShips.computerCarrierArray.some(particularElement => this.id === particularElement) || computerShips.computerBattleshipArray.some(particularElement => this.id === particularElement) || computerShips.computerCruiserArray.some(particularElement => this.id === particularElement) || computerShips.computerSubmarineArray.some(particularElement => this.id === particularElement) || computerShips.computerDestroyerArray.some(particularElement => this.id === particularElement)) {\n          this.style.backgroundColor = \"red\";\n        } else {\n          this.style.backgroundColor = \"yellow\";\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Battleship Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player Fleet V.S. Computer Fleet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"player-game-board\",\n      children: gameBoardCoordinates.map(gameBoardCoordinate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          id: gameBoardCoordinate,\n          style: {\n            backgroundColor: \"white\"\n          }\n        }, uniqid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"computer-game-board\",\n      children: gameBoardCoordinates.map(gameBoardCoordinate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          id: gameBoardCoordinate\n        }, uniqid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 329,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/loulau/Documents/react/project-battleship-game/src/App.js"],"names":["React","useEffect","uniqid","App","Ship","shipName","shipArray","shipCoordinates","j","length","push","coordinate","hit","sink","name","isSunk","counter","i","coordinateChosenByEnemy","playerGameBoard","playerCarrierArray","playerCarrier","playerBattleshipArray","playerBattleship","playerCruiserArray","playerCruiser","playerSubmarineArray","playerSubmarine","playerDestroyerArray","playerDestroyer","computerPlayerMissedShots","computerPlayerHitShots","receiveComputerAttack","targetFound","indexOf","oneRandomCoordinate","gameBoardCoordinates","Math","floor","random","console","log","elements","document","getElementsByClassName","some","particularElement","id","parentNode","style","backgroundColor","computerGameBoard","computerCarrierArray","computerCarrier","computerBattleshipArray","computerBattleship","computerCruiserArray","computerCruiser","computerSubmarineArray","computerSubmarine","computerDestroyerArray","computerDestroyer","playerMissedShots","playerHitShots","receivePlayerAttack","playerShips","computerShips","addEventListener","updateStatus","once","coordinatepickedbyPlayer","map","gameBoardCoordinate"],"mappings":"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","sourcesContent":["import './App.css'\nimport React, {useEffect } from 'react';\nimport uniqid from \"uniqid\";\n \nconst App = () => {\n\n  const Ship = (shipName, shipArray) => {\n      \n      let shipCoordinates = [];\n\n      let j = 0;\n\n      while (j < shipArray.length) {\n\n        shipCoordinates.push({coordinate: shipArray[j], hit: false, sink: false, name: shipName });\n\n        j++;\n\n      }\n\n      const isSunk = () => {\n        let counter = 0;\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          if (shipCoordinates[i].hit === true) {\n            counter++;\n          }\n        }\n        if (counter === shipCoordinates.length) {\n          for (let i = 0; i < shipCoordinates.length; i++) {\n            shipCoordinates[i].sink = true;\n              \n          }\n        }\n      };\n      \n\n      const hit = (coordinateChosenByEnemy) => {  \n        for (let i = 0; i < shipCoordinates.length; i++) {\n          if (shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            shipCoordinates[i].hit = true;\n          }\n        }\n      };\n      \n      return {shipCoordinates, hit, isSunk}; \n    }\n\n\n    const playerGameBoard = () => {\n      \n      let playerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"]; //pre-determined coordinates\n      const playerCarrier = Ship(\"carrier\", playerCarrierArray);\n\n      let playerBattleshipArray = [\"J2\", \"J3\", \"J4\", \"J5\", \"J6\"]; \n      const playerBattleship = Ship(\"battleship\", playerBattleshipArray);\n\n      let playerCruiserArray = [\"A6\", \"B6\", \"C6\"];\n      const playerCruiser = Ship(\"cruiser\", playerCruiserArray);\n      \n      let playerSubmarineArray = [\"G8\", \"G9\", \"G10\"];\n      const playerSubmarine = Ship(\"submarine\", playerSubmarineArray);\n        \n      let playerDestroyerArray = [\"A9\", \"A10\"];\n      const playerDestroyer = Ship(\"destroyer\", playerDestroyerArray);      \n      \n      let computerPlayerMissedShots = [];\n\n      let computerPlayerHitShots = [];\n      \n      const receiveComputerAttack = (coordinateChosenByEnemy) => {\n\n        let targetFound = false;\n\n        for (let i = 0; i < playerCarrier.shipCoordinates.length; i++) {\n          \n          if (playerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              playerCarrier.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n            }\n          }\n        }\n        \n        for (let i = 0; i < playerBattleship.shipCoordinates.length; i++) {\n\n          if (playerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              playerBattleship.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n            }\n          }\n        }\n\n        for (let i = 0; i < playerCruiser.shipCoordinates.length; i++) {\n\n          if (playerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              playerCruiser.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n            }\n          }\n        }\n\n        for (let i = 0; i < playerSubmarine.shipCoordinates.length; i++) {\n\n          if (playerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              playerSubmarine.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n            }\n          }\n        }\n\n        for (let i = 0; i < playerDestroyer.shipCoordinates.length; i++) {\n          \n          if (playerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(computerPlayerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              playerDestroyer.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n            } else {\n              let oneRandomCoordinate = gameBoardCoordinates[Math.floor(Math.random()*gameBoardCoordinates.length)];\n              receiveComputerAttack(oneRandomCoordinate);\n            }\n          }\n        } \n        \n        if (targetFound === false) {\n          if(computerPlayerMissedShots.indexOf(coordinateChosenByEnemy) === -1) {\n            computerPlayerMissedShots.push(coordinateChosenByEnemy);\n            console.log(computerPlayerMissedShots);\n          } else {\n            let oneRandomCoordinate = gameBoardCoordinates[Math.floor(Math.random()*gameBoardCoordinates.length)];\n            receiveComputerAttack(oneRandomCoordinate);\n          }\n        }\n        \n        let elements = document.getElementsByClassName('grid');\n      \n        for (let i = 0; i < elements.length; i++) {\n    \n          if(computerPlayerMissedShots.some(particularElement=> elements[i].id === (particularElement))) {\n            if(elements[i].parentNode.id === \"player-game-board\") {\n              elements[i].style.backgroundColor = \"yellow\";\n            }\n          }\n          \n          if(computerPlayerHitShots.some(particularElement=> elements[i].id === (particularElement))) {\n            if(elements[i].parentNode.id === \"player-game-board\") {\n              elements[i].style.backgroundColor = \"red\";\n            }\n          }\n        }\n      \n      }\n\n      return { playerBattleship, playerCruiser, playerSubmarine, playerCarrier, playerDestroyer, \n        receiveComputerAttack, computerPlayerMissedShots, computerPlayerHitShots,\n        playerCarrierArray, playerBattleshipArray, playerCruiserArray, playerSubmarineArray, playerDestroyerArray};\n    }\n\n\n    const computerGameBoard = () => {\n\n      let computerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n      const computerCarrier = Ship(\"carrier\", computerCarrierArray);\n      \n      let computerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n      const computerBattleship = Ship(\"battleship\", computerBattleshipArray);\n      \n      let computerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n      const computerCruiser = Ship(\"cruiser\", computerCruiserArray);\n      \n      let computerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n      const computerSubmarine = Ship(\"submarine\", computerSubmarineArray);\n      \n      let computerDestroyerArray =[\"A5\", \"B5\"];\n      const computerDestroyer = Ship(\"destroyer\", computerDestroyerArray);\n      \n\n      let playerMissedShots = [];\n      let playerHitShots = [];\n\n      const receivePlayerAttack = (coordinateChosenByEnemy) => {\n\n        let targetFound = false;\n\n        for (let i = 0; i < computerCarrier.shipCoordinates.length; i++) {\n          if (computerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              computerCarrier.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);          \n            }\n          }\n        }\n\n        for (let i = 0; i < computerBattleship.shipCoordinates.length; i++) {\n          if (computerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              computerBattleship.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n            }\n          }\n        }\n\n        for (let i = 0; i < computerCruiser.shipCoordinates.length; i++) {\n          if (computerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              computerCruiser.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n            } \n          }\n        }\n\n        for (let i = 0; i < computerSubmarine.shipCoordinates.length; i++) {\n          if (computerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              computerSubmarine.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n            }\n          }\n        }\n\n        for (let i = 0; i < computerDestroyer.shipCoordinates.length; i++) {\n          if (computerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            if(playerHitShots.indexOf(coordinateChosenByEnemy) === -1) {\n              computerDestroyer.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              playerHitShots.push(coordinateChosenByEnemy);\n            }\n          }\n        } \n        \n        if (targetFound === false) {\n          if(playerMissedShots.indexOf(coordinateChosenByEnemy) === -1) {\n            playerMissedShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        if(playerHitShots.length === 18) {\n          console.log(\"player wins\");\n        }\n      }\n      \n      return {computerCarrier, computerBattleship, computerCruiser, computerSubmarine, computerDestroyer, \n        receivePlayerAttack, playerMissedShots, playerHitShots,\n        computerCarrierArray, computerBattleshipArray, computerCruiserArray, computerSubmarineArray, computerDestroyerArray}\n    \n    }\n\n\n\n    \n    const playerShips = playerGameBoard();\n\n    const computerShips = computerGameBoard();\n    \n  const gameBoardCoordinates = \n                    [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\",\n                     \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\",\n                     \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\",\n                     \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\",\n                     \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\",\n                     \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n                     \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\",\n                     \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\",\n                     \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\",\n                     \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\",\n                    ];\n    \n\n      useEffect(()=> {\n      \n      let elements = document.getElementsByClassName('grid');\n      \n      for (let i = 0; i < elements.length; i++) {\n        if(elements[i].parentNode.id === \"computer-game-board\") {\n          elements[i].addEventListener('click', updateStatus, {once: true}); \n        }\n\n        if(playerShips.playerCarrierArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        playerShips.playerBattleshipArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        playerShips.playerCruiserArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        playerShips.playerSubmarineArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        playerShips.playerDestroyerArray.some(particularElement=> elements[i].id === (particularElement))) {\n\n          if(elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"blue\";\n          }\n        }\n\n      }\n  \n      function updateStatus() {\n          \n          let coordinatepickedbyPlayer = this.id;\n          computerShips.receivePlayerAttack(coordinatepickedbyPlayer); \n\n          let oneRandomCoordinate = gameBoardCoordinates[Math.floor(Math.random()*gameBoardCoordinates.length)];\n          playerShips.receiveComputerAttack(oneRandomCoordinate);\n\n          if(this.parentNode.id === \"computer-game-board\") {\n            if(computerShips.computerCarrierArray.some(particularElement=> this.id === (particularElement)) ||\n            computerShips.computerBattleshipArray.some(particularElement=> this.id === (particularElement)) ||\n            computerShips.computerCruiserArray.some(particularElement=> this.id === (particularElement)) ||\n            computerShips.computerSubmarineArray.some(particularElement=> this.id === (particularElement)) ||\n            computerShips.computerDestroyerArray.some(particularElement=> this.id === (particularElement))\n            ) {\n              this.style.backgroundColor = \"red\";\n              \n            } else {\n              this.style.backgroundColor = \"yellow\"; \n\n            }\n        }\n      }\n    })\n\n\n    return(\n      <div>\n        <h1>Battleship Game</h1>\n        <h2>Player Fleet V.S. Computer Fleet</h2>\n    \n        <div className=\"container\" id=\"player-game-board\">\n          {gameBoardCoordinates.map((gameBoardCoordinate) => {\n \n          return <div className=\"grid\" key={uniqid()} id={gameBoardCoordinate}\n          style={{backgroundColor: \"white\"}}\n          ></div>\n          })}\n        </div>\n          \n\n        <div className=\"container\" id=\"computer-game-board\">\n          {gameBoardCoordinates.map((gameBoardCoordinate) => {\n          return <div className=\"grid\" key={uniqid()} id={gameBoardCoordinate}\n          ></div>\n          })}\n        </div>\n\n\n      </div>\n    )\n}\n\n\nexport default App;\n  \n\n\n  \n\n\n\n"]},"metadata":{},"sourceType":"module"}