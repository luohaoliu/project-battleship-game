{"ast":null,"code":"var _jsxFileName = \"/Users/loulau/Documents/react/project-battleship-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const Ship = (shipName, shipArray) => {\n    let shipCoordinates = [];\n    let j = 0;\n\n    while (j < shipArray.length) {\n      shipCoordinates.push({\n        xCoordinate: shipArray[j],\n        yCoordinate: shipArray[j + 1],\n        hit: false,\n        sink: false,\n        name: shipName\n      });\n      j += 2;\n    }\n\n    const isSunk = () => {\n      let counter = 0;\n\n      for (let i = 0; i < shipCoordinates.length; i++) {\n        if (shipCoordinates[i].hit === true) {\n          counter++;\n        }\n      }\n\n      if (counter === shipCoordinates.length) {\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          shipCoordinates[i].sink = true;\n        }\n      }\n    };\n\n    const hit = (xCoordinateChosenByEnemy, yCoordinateChosenByEnemy) => {\n      for (let i = 0; i < shipCoordinates.length; i++) {\n        if (shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          shipCoordinates[i].hit = true;\n        }\n      }\n\n      isSunk();\n    };\n\n    return {\n      shipCoordinates,\n      hit\n    };\n  };\n\n  const playerGameBoard = () => {\n    let allPlayerShipsAreSunk = [];\n    let playerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n    const playerCarrier = Ship(\"carrier\", playerCarrierArray);\n    let playerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n    const playerBattleship = Ship(\"battleship\", playerBattleshipArray);\n    let playerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n    const playerCruiser = Ship(\"cruiser\", playerCruiserArray);\n    let playerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n    const playerSubmarine = Ship(\"submarine\", playerSubmarineArray);\n    let playerDestroyerArray = [\"A5\", \"B5\"];\n    const playerDestroyer = Ship(\"destroyer\", playerDestroyerArray);\n    let computerPlayerMissedShots = [];\n\n    const receiveComputerAttack = (xCoordinateChosenByEnemy, yCoordinateChosenByEnemy) => {\n      let targetFound = false;\n\n      for (let i = 0; i < playerCarrier.shipCoordinates.length; i++) {\n        if (playerCarrier.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && playerCarrier.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          playerCarrier.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < playerBattleship.shipCoordinates.length; i++) {\n        if (playerBattleship.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && playerBattleship.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          playerBattleship.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < playerCruiser.shipCoordinates.length; i++) {\n        if (playerCruiser.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && playerCruiser.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          playerCruiser.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < playerSubmarine.shipCoordinates.length; i++) {\n        if (playerSubmarine.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && playerSubmarine.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          playerSubmarine.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < playerDestroyer.shipCoordinates.length; i++) {\n        if (playerDestroyer.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && playerDestroyer.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          playerDestroyer.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      if (targetFound === false) {\n        computerPlayerMissedShots.push(xCoordinateChosenByEnemy);\n        computerPlayerMissedShots.push(yCoordinateChosenByEnemy);\n      }\n    };\n\n    return {\n      playerBattleship,\n      playerCruiser,\n      playerSubmarine,\n      playerCarrier,\n      playerDestroyer,\n      receiveComputerAttack,\n      computerPlayerMissedShots,\n      allPlayerShipsAreSunk\n    };\n  };\n\n  const computerGameBoard = () => {\n    let allComputerShipsAreSunk = [];\n    let computerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n    const computerCarrier = Ship(\"carrier\", computerCarrierArray);\n    let computerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n    const computerBattleship = Ship(\"battleship\", computerBattleshipArray);\n    let computerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n    const computerCruiser = Ship(\"cruiser\", computerCruiserArray);\n    let computerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n    const computerSubmarine = Ship(\"submarine\", computerSubmarineArray);\n    let computerDestroyerArray = [\"A5\", \"B5\"];\n    const computerDestroyer = Ship(\"destroyer\", computerDestroyerArray);\n    let playerMissedShots = [];\n\n    const receivePlayerAttack = (xCoordinateChosenByEnemy, yCoordinateChosenByEnemy) => {\n      let targetFound = false;\n\n      for (let i = 0; i < computerCarrier.shipCoordinates.length; i++) {\n        if (computerCarrier.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && computerCarrier.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          computerCarrier.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < computerBattleship.shipCoordinates.length; i++) {\n        if (computerBattleship.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && computerBattleship.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          computerBattleship.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < computerCruiser.shipCoordinates.length; i++) {\n        if (computerCruiser.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && computerCruiser.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          computerCruiser.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < computerSubmarine.shipCoordinates.length; i++) {\n        if (computerSubmarine.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && computerSubmarine.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          computerSubmarine.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < computerDestroyer.shipCoordinates.length; i++) {\n        if (computerDestroyer.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && computerDestroyer.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n          computerDestroyer.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      if (targetFound === false) {\n        playerMissedShots.push(xCoordinateChosenByEnemy);\n        playerMissedShots.push(yCoordinateChosenByEnemy);\n      }\n    };\n\n    return {\n      computerCarrier,\n      computerBattleship,\n      computerCruiser,\n      computerSubmarine,\n      computerDestroyer,\n      receivePlayerAttack,\n      playerMissedShots,\n      allComputerShipsAreSunk,\n      computerCarrierArray,\n      computerBattleshipArray,\n      computerCruiserArray,\n      computerSubmarineArray,\n      computerDestroyerArray\n    };\n  };\n\n  const computerShips = computerGameBoard();\n\n  const player = () => {\n    let allPlayerChoices = [];\n    let playerChoice = [];\n\n    function askForPlayerInput() {\n      let x = 1;\n      playerChoice.push(x);\n    }\n\n    let count = 0;\n\n    for (let i = 0; i < allPlayerChoices.length; i++) {\n      if (allPlayerChoices[i] !== playerChoice[0]) {\n        count += 1;\n      }\n    }\n\n    if (count === allPlayerChoices.length) {\n      allPlayerChoices = allPlayerChoices.concat(playerChoice);\n      computerShips.receivePlayerAttack(playerChoice[0]);\n    } else {\n      allPlayerChoices = allPlayerChoices.concat(playerChoice);\n    }\n\n    playerChoice = [];\n    return {\n      count,\n      playerChoice,\n      allPlayerChoices\n    };\n  };\n\n  const playerShips = playerGameBoard();\n\n  const computerPlayer = () => {\n    const availableCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\", \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\", \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\", \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\", \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\", \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\"];\n    let allComputerChoices = [];\n    let computerChoice = [];\n\n    const chooseRandomElementFromArray = (() => {\n      let oneRandomElement = availableCoordinates[Math.floor(Math.random() * availableCoordinates.length)];\n      computerChoice.push(oneRandomElement);\n    })();\n\n    let counter = 0;\n\n    for (let i = 0; i < allComputerChoices.length; i++) {\n      if (allComputerChoices[i] !== computerChoice[0]) {\n        counter += 1;\n      }\n    }\n\n    if (counter === allComputerChoices.length) {\n      allComputerChoices = allComputerChoices.concat(computerChoice);\n      playerShips.receiveComputerAttack(computerChoice[0]);\n    } else {\n      allComputerChoices = allComputerChoices.concat(computerChoice);\n    }\n\n    computerChoice = [];\n    return {\n      counter,\n      computerChoice,\n      allComputerChoices\n    };\n  };\n\n  const gameBoardCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\", \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\", \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\", \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\", \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\", \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\"];\n  useEffect(() => {\n    let elements = document.getElementsByClassName('grid');\n\n    for (let i = 0; i < elements.length; ++i) {\n      elements[i].addEventListener('click', changeColor);\n\n      if (computerShips.computerCarrierArray.some(particularElement => elements[i].id === particularElement) || computerShips.computerBattleshipArray.some(particularElement => elements[i].id === particularElement) || computerShips.computerCruiserArray.some(particularElement => elements[i].id === particularElement) || computerShips.computerSubmarineArray.some(particularElement => elements[i].id === particularElement) || computerShips.computerDestroyerArray.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"player-game-board\") {\n          elements[i].style.backgroundColor = \"blue\";\n        }\n      }\n    }\n\n    function changeColor() {\n      this.style.backgroundColor = \"yellow\";\n\n      if (computerShips.computerCarrierArray.some(particularElement => this.id === particularElement) || computerShips.computerBattleshipArray.some(particularElement => this.id === particularElement) || computerShips.computerCruiserArray.some(particularElement => this.id === particularElement) || computerShips.computerSubmarineArray.some(particularElement => this.id === particularElement) || computerShips.computerDestroyerArray.some(particularElement => this.id === particularElement)) {\n        this.style.backgroundColor = \"red\";\n      }\n    }\n  });\n\n  const gameLogic = (() => {\n    let whoseTurn = 0;\n    const Jeff = player();\n    const Alpha = computerPlayer();\n    console.log(\"you are here\");\n    return {\n      Jeff,\n      Alpha\n    };\n  })();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project Battleship Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player Fleet V.S. Computer Fleet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"player-game-board\",\n      children: gameBoardCoordinates.map(gameBoardCoordinate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          id: gameBoardCoordinate,\n          \"data-color\": \"yellow\",\n          style: {\n            backgroundColor: \"white\"\n          }\n        }, gameBoardCoordinate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"computer-game-board\",\n      children: gameBoardCoordinates.map(gameBoardCoordinate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          id: gameBoardCoordinate,\n          \"missed-color\": \"yellow\"\n        }, gameBoardCoordinate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/loulau/Documents/react/project-battleship-game/src/App.js"],"names":["React","useState","useEffect","App","Ship","shipName","shipArray","shipCoordinates","j","length","push","xCoordinate","yCoordinate","hit","sink","name","isSunk","counter","i","xCoordinateChosenByEnemy","yCoordinateChosenByEnemy","playerGameBoard","allPlayerShipsAreSunk","playerCarrierArray","playerCarrier","playerBattleshipArray","playerBattleship","playerCruiserArray","playerCruiser","playerSubmarineArray","playerSubmarine","playerDestroyerArray","playerDestroyer","computerPlayerMissedShots","receiveComputerAttack","targetFound","computerGameBoard","allComputerShipsAreSunk","computerCarrierArray","computerCarrier","computerBattleshipArray","computerBattleship","computerCruiserArray","computerCruiser","computerSubmarineArray","computerSubmarine","computerDestroyerArray","computerDestroyer","playerMissedShots","receivePlayerAttack","computerShips","player","allPlayerChoices","playerChoice","askForPlayerInput","x","count","concat","playerShips","computerPlayer","availableCoordinates","allComputerChoices","computerChoice","chooseRandomElementFromArray","oneRandomElement","Math","floor","random","gameBoardCoordinates","elements","document","getElementsByClassName","addEventListener","changeColor","some","particularElement","id","parentNode","style","backgroundColor","gameLogic","whoseTurn","Jeff","Alpha","console","log","map","gameBoardCoordinate"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,IAAI,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AAElC,QAAIC,eAAe,GAAG,EAAtB;AAEA,QAAIC,CAAC,GAAG,CAAR;;AAEA,WAAOA,CAAC,GAAGF,SAAS,CAACG,MAArB,EAA6B;AAE3BF,MAAAA,eAAe,CAACG,IAAhB,CAAqB;AAACC,QAAAA,WAAW,EAAEL,SAAS,CAACE,CAAD,CAAvB;AAA4BI,QAAAA,WAAW,EAAEN,SAAS,CAACE,CAAC,GAAC,CAAH,CAAlD;AACnBK,QAAAA,GAAG,EAAE,KADc;AACPC,QAAAA,IAAI,EAAE,KADC;AACMC,QAAAA,IAAI,EAAEV;AADZ,OAArB;AAGAG,MAAAA,CAAC,IAAI,CAAL;AAED;;AAED,UAAMQ,MAAM,GAAG,MAAM;AACnB,UAAIC,OAAO,GAAG,CAAd;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,eAAe,CAACE,MAApC,EAA4CS,CAAC,EAA7C,EAAiD;AAC/C,YAAIX,eAAe,CAACW,CAAD,CAAf,CAAmBL,GAAnB,KAA2B,IAA/B,EAAqC;AACnCI,UAAAA,OAAO;AACR;AACF;;AACD,UAAIA,OAAO,KAAKV,eAAe,CAACE,MAAhC,EAAwC;AACtC,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,eAAe,CAACE,MAApC,EAA4CS,CAAC,EAA7C,EAAiD;AAC/CX,UAAAA,eAAe,CAACW,CAAD,CAAf,CAAmBJ,IAAnB,GAA0B,IAA1B;AAED;AACF;AACF,KAbD;;AAgBA,UAAMD,GAAG,GAAG,CAACM,wBAAD,EAA2BC,wBAA3B,KAAwD;AAElE,WAAK,IAAIF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGX,eAAe,CAACE,MAApC,EAA4CS,CAAC,EAA7C,EAAiD;AAC/C,YAAIX,eAAe,CAACW,CAAD,CAAf,CAAmBP,WAAnB,KAAmCQ,wBAAnC,IACJZ,eAAe,CAACW,CAAD,CAAf,CAAmBN,WAAnB,KAAmCQ,wBADnC,EAC6D;AAC3Db,UAAAA,eAAe,CAACW,CAAD,CAAf,CAAmBL,GAAnB,GAAyB,IAAzB;AACD;AACF;;AAEDG,MAAAA,MAAM;AAEP,KAXD;;AAcA,WAAO;AAACT,MAAAA,eAAD;AAAkBM,MAAAA;AAAlB,KAAP;AAED,GA/CH;;AAkDE,QAAMQ,eAAe,GAAG,MAAM;AAE5B,QAAIC,qBAAqB,GAAG,EAA5B;AAEA,QAAIC,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAzB;AACA,UAAMC,aAAa,GAAGpB,IAAI,CAAC,SAAD,EAAYmB,kBAAZ,CAA1B;AAEA,QAAIE,qBAAqB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAA5B;AACA,UAAMC,gBAAgB,GAAGtB,IAAI,CAAC,YAAD,EAAeqB,qBAAf,CAA7B;AAEA,QAAIE,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAAzB;AACA,UAAMC,aAAa,GAAGxB,IAAI,CAAC,SAAD,EAAYuB,kBAAZ,CAA1B;AAEA,QAAIE,oBAAoB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAA3B;AACA,UAAMC,eAAe,GAAG1B,IAAI,CAAC,WAAD,EAAcyB,oBAAd,CAA5B;AAEA,QAAIE,oBAAoB,GAAG,CAAC,IAAD,EAAO,IAAP,CAA3B;AACA,UAAMC,eAAe,GAAG5B,IAAI,CAAC,WAAD,EAAc2B,oBAAd,CAA5B;AAEA,QAAIE,yBAAyB,GAAG,EAAhC;;AAGA,UAAMC,qBAAqB,GAAG,CAACf,wBAAD,EAA2BC,wBAA3B,KAAwD;AAEpF,UAAIe,WAAW,GAAG,KAAlB;;AAEA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,aAAa,CAACjB,eAAd,CAA8BE,MAAlD,EAA0DS,CAAC,EAA3D,EAA+D;AAE7D,YAAIM,aAAa,CAACjB,eAAd,CAA8BW,CAA9B,EAAiCP,WAAjC,KAAiDQ,wBAAjD,IACFK,aAAa,CAACjB,eAAd,CAA8BW,CAA9B,EAAiCN,WAAjC,KAAiDQ,wBADnD,EAC6E;AACzEI,UAAAA,aAAa,CAACX,GAAd,CAAkBM,wBAAlB,EAA4CC,wBAA5C;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAb,UAAAA,qBAAqB,CAACZ,IAAtB,CAA2B,KAA3B;AACH;AACF;;AAED,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,gBAAgB,CAACnB,eAAjB,CAAiCE,MAArD,EAA6DS,CAAC,EAA9D,EAAkE;AAEhE,YAAIQ,gBAAgB,CAACnB,eAAjB,CAAiCW,CAAjC,EAAoCP,WAApC,KAAoDQ,wBAApD,IACFO,gBAAgB,CAACnB,eAAjB,CAAiCW,CAAjC,EAAoCN,WAApC,KAAoDQ,wBADtD,EACgF;AAC5EM,UAAAA,gBAAgB,CAACb,GAAjB,CAAqBM,wBAArB,EAA+CC,wBAA/C;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAb,UAAAA,qBAAqB,CAACZ,IAAtB,CAA2B,KAA3B;AACH;AACF;;AAED,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGU,aAAa,CAACrB,eAAd,CAA8BE,MAAlD,EAA0DS,CAAC,EAA3D,EAA+D;AAE7D,YAAIU,aAAa,CAACrB,eAAd,CAA8BW,CAA9B,EAAiCP,WAAjC,KAAiDQ,wBAAjD,IACFS,aAAa,CAACrB,eAAd,CAA8BW,CAA9B,EAAiCN,WAAjC,KAAiDQ,wBADnD,EAC6E;AACzEQ,UAAAA,aAAa,CAACf,GAAd,CAAkBM,wBAAlB,EAA4CC,wBAA5C;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAb,UAAAA,qBAAqB,CAACZ,IAAtB,CAA2B,KAA3B;AACH;AACF;;AAED,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,eAAe,CAACvB,eAAhB,CAAgCE,MAApD,EAA4DS,CAAC,EAA7D,EAAiE;AAE/D,YAAIY,eAAe,CAACvB,eAAhB,CAAgCW,CAAhC,EAAmCP,WAAnC,KAAmDQ,wBAAnD,IACFW,eAAe,CAACvB,eAAhB,CAAgCW,CAAhC,EAAmCN,WAAnC,KAAmDQ,wBADrD,EAC+E;AAC3EU,UAAAA,eAAe,CAACjB,GAAhB,CAAoBM,wBAApB,EAA8CC,wBAA9C;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAb,UAAAA,qBAAqB,CAACZ,IAAtB,CAA2B,KAA3B;AACH;AACF;;AAED,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,eAAe,CAACzB,eAAhB,CAAgCE,MAApD,EAA4DS,CAAC,EAA7D,EAAiE;AAE/D,YAAIc,eAAe,CAACzB,eAAhB,CAAgCW,CAAhC,EAAmCP,WAAnC,KAAmDQ,wBAAnD,IACFa,eAAe,CAACzB,eAAhB,CAAgCW,CAAhC,EAAmCN,WAAnC,KAAmDQ,wBADrD,EAC+E;AAC3EY,UAAAA,eAAe,CAACnB,GAAhB,CAAoBM,wBAApB,EAA8CC,wBAA9C;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAb,UAAAA,qBAAqB,CAACZ,IAAtB,CAA2B,KAA3B;AACH;AAEF;;AAED,UAAIyB,WAAW,KAAK,KAApB,EAA2B;AACzBF,QAAAA,yBAAyB,CAACvB,IAA1B,CAA+BS,wBAA/B;AACAc,QAAAA,yBAAyB,CAACvB,IAA1B,CAA+BU,wBAA/B;AACD;AACF,KA3DD;;AA6DA,WAAO;AAAEM,MAAAA,gBAAF;AAAoBE,MAAAA,aAApB;AAAmCE,MAAAA,eAAnC;AAAoDN,MAAAA,aAApD;AACLQ,MAAAA,eADK;AACYE,MAAAA,qBADZ;AACmCD,MAAAA,yBADnC;AAC8DX,MAAAA;AAD9D,KAAP;AAED,GArFD;;AAwFA,QAAMc,iBAAiB,GAAG,MAAM;AAE9B,QAAIC,uBAAuB,GAAG,EAA9B;AAEA,QAAIC,oBAAoB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAA3B;AACA,UAAMC,eAAe,GAAGnC,IAAI,CAAC,SAAD,EAAYkC,oBAAZ,CAA5B;AAEA,QAAIE,uBAAuB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAA9B;AACA,UAAMC,kBAAkB,GAAGrC,IAAI,CAAC,YAAD,EAAeoC,uBAAf,CAA/B;AAEA,QAAIE,oBAAoB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAA3B;AACA,UAAMC,eAAe,GAAGvC,IAAI,CAAC,SAAD,EAAYsC,oBAAZ,CAA5B;AAEA,QAAIE,sBAAsB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,CAA7B;AACA,UAAMC,iBAAiB,GAAGzC,IAAI,CAAC,WAAD,EAAcwC,sBAAd,CAA9B;AAEA,QAAIE,sBAAsB,GAAE,CAAC,IAAD,EAAO,IAAP,CAA5B;AACA,UAAMC,iBAAiB,GAAG3C,IAAI,CAAC,WAAD,EAAc0C,sBAAd,CAA9B;AAGA,QAAIE,iBAAiB,GAAG,EAAxB;;AAEA,UAAMC,mBAAmB,GAAG,CAAC9B,wBAAD,EAA2BC,wBAA3B,KAAwD;AAElF,UAAIe,WAAW,GAAG,KAAlB;;AAIA,WAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,eAAe,CAAChC,eAAhB,CAAgCE,MAApD,EAA4DS,CAAC,EAA7D,EAAiE;AAE/D,YAAIqB,eAAe,CAAChC,eAAhB,CAAgCW,CAAhC,EAAmCP,WAAnC,KAAmDQ,wBAAnD,IACFoB,eAAe,CAAChC,eAAhB,CAAgCW,CAAhC,EAAmCN,WAAnC,KAAmDQ,wBADrD,EAC+E;AAC3EmB,UAAAA,eAAe,CAAC1B,GAAhB,CAAoBM,wBAApB,EAA8CC,wBAA9C;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAE,UAAAA,uBAAuB,CAAC3B,IAAxB,CAA6B,KAA7B;AACH;AACF;;AAED,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuB,kBAAkB,CAAClC,eAAnB,CAAmCE,MAAvD,EAA+DS,CAAC,EAAhE,EAAoE;AAElE,YAAIuB,kBAAkB,CAAClC,eAAnB,CAAmCW,CAAnC,EAAsCP,WAAtC,KAAsDQ,wBAAtD,IACFsB,kBAAkB,CAAClC,eAAnB,CAAmCW,CAAnC,EAAsCN,WAAtC,KAAsDQ,wBADxD,EACkF;AAC9EqB,UAAAA,kBAAkB,CAAC5B,GAAnB,CAAuBM,wBAAvB,EAAiDC,wBAAjD;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAE,UAAAA,uBAAuB,CAAC3B,IAAxB,CAA6B,KAA7B;AACH;AACF;;AAED,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,eAAe,CAACpC,eAAhB,CAAgCE,MAApD,EAA4DS,CAAC,EAA7D,EAAiE;AAE/D,YAAIyB,eAAe,CAACpC,eAAhB,CAAgCW,CAAhC,EAAmCP,WAAnC,KAAmDQ,wBAAnD,IACFwB,eAAe,CAACpC,eAAhB,CAAgCW,CAAhC,EAAmCN,WAAnC,KAAmDQ,wBADrD,EAC+E;AAC3EuB,UAAAA,eAAe,CAAC9B,GAAhB,CAAoBM,wBAApB,EAA8CC,wBAA9C;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAE,UAAAA,uBAAuB,CAAC3B,IAAxB,CAA6B,KAA7B;AACH;AACF;;AAED,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,iBAAiB,CAACtC,eAAlB,CAAkCE,MAAtD,EAA8DS,CAAC,EAA/D,EAAmE;AAEjE,YAAI2B,iBAAiB,CAACtC,eAAlB,CAAkCW,CAAlC,EAAqCP,WAArC,KAAqDQ,wBAArD,IACF0B,iBAAiB,CAACtC,eAAlB,CAAkCW,CAAlC,EAAqCN,WAArC,KAAqDQ,wBADvD,EACiF;AAC7EyB,UAAAA,iBAAiB,CAAChC,GAAlB,CAAsBM,wBAAtB,EAAgDC,wBAAhD;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAE,UAAAA,uBAAuB,CAAC3B,IAAxB,CAA6B,KAA7B;AACH;AACF;;AAED,WAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6B,iBAAiB,CAACxC,eAAlB,CAAkCE,MAAtD,EAA8DS,CAAC,EAA/D,EAAmE;AAEjE,YAAI6B,iBAAiB,CAACxC,eAAlB,CAAkCW,CAAlC,EAAqCP,WAArC,KAAqDQ,wBAArD,IACF4B,iBAAiB,CAACxC,eAAlB,CAAkCW,CAAlC,EAAqCN,WAArC,KAAqDQ,wBADvD,EACiF;AAC7E2B,UAAAA,iBAAiB,CAAClC,GAAlB,CAAsBM,wBAAtB,EAAgDC,wBAAhD;AACAe,UAAAA,WAAW,GAAG,IAAd;AACAE,UAAAA,uBAAuB,CAAC3B,IAAxB,CAA6B,KAA7B;AACH;AACF;;AAED,UAAIyB,WAAW,KAAK,KAApB,EAA2B;AACzBa,QAAAA,iBAAiB,CAACtC,IAAlB,CAAuBS,wBAAvB;AACA6B,QAAAA,iBAAiB,CAACtC,IAAlB,CAAuBU,wBAAvB;AACD;AAEF,KA7DD;;AAgEA,WAAO;AAACmB,MAAAA,eAAD;AAAkBE,MAAAA,kBAAlB;AAAsCE,MAAAA,eAAtC;AAAuDE,MAAAA,iBAAvD;AAA0EE,MAAAA,iBAA1E;AACLE,MAAAA,mBADK;AAELD,MAAAA,iBAFK;AAEcX,MAAAA,uBAFd;AAEuCC,MAAAA,oBAFvC;AAE6DE,MAAAA,uBAF7D;AAEsFE,MAAAA,oBAFtF;AAGPE,MAAAA,sBAHO;AAGiBE,MAAAA;AAHjB,KAAP;AAID,GA1FD;;AA6FA,QAAMI,aAAa,GAAGd,iBAAiB,EAAvC;;AAGA,QAAMe,MAAM,GAAG,MAAM;AAEnB,QAAIC,gBAAgB,GAAG,EAAvB;AAEA,QAAIC,YAAY,GAAG,EAAnB;;AAEA,aAASC,iBAAT,GAA6B;AAE3B,UAAIC,CAAC,GAAG,CAAR;AAEAF,MAAAA,YAAY,CAAC3C,IAAb,CAAkB6C,CAAlB;AAED;;AAED,QAAIC,KAAK,GAAG,CAAZ;;AAEA,SAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkC,gBAAgB,CAAC3C,MAArC,EAA6CS,CAAC,EAA9C,EAAkD;AAChD,UAAIkC,gBAAgB,CAAClC,CAAD,CAAhB,KAAwBmC,YAAY,CAAC,CAAD,CAAxC,EAA6C;AAC3CG,QAAAA,KAAK,IAAI,CAAT;AACD;AACF;;AAED,QAAIA,KAAK,KAAKJ,gBAAgB,CAAC3C,MAA/B,EAAuC;AACrC2C,MAAAA,gBAAgB,GAAGA,gBAAgB,CAACK,MAAjB,CAAwBJ,YAAxB,CAAnB;AACAH,MAAAA,aAAa,CAACD,mBAAd,CAAkCI,YAAY,CAAC,CAAD,CAA9C;AAED,KAJD,MAIO;AAELD,MAAAA,gBAAgB,GAAGA,gBAAgB,CAACK,MAAjB,CAAwBJ,YAAxB,CAAnB;AACD;;AAEDA,IAAAA,YAAY,GAAG,EAAf;AAEA,WAAO;AAACG,MAAAA,KAAD;AAAQH,MAAAA,YAAR;AAAsBD,MAAAA;AAAtB,KAAP;AAED,GAnCD;;AAsCA,QAAMM,WAAW,GAAGrC,eAAe,EAAnC;;AAGA,QAAMsC,cAAc,GAAG,MAAM;AAE7B,UAAMC,oBAAoB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,KAAvD,EACb,IADa,EACP,IADO,EACD,IADC,EACK,IADL,EACW,IADX,EACiB,IADjB,EACuB,IADvB,EAC6B,IAD7B,EACmC,IADnC,EACyC,KADzC,EAEb,IAFa,EAEP,IAFO,EAED,IAFC,EAEK,IAFL,EAEW,IAFX,EAEiB,IAFjB,EAEuB,IAFvB,EAE6B,IAF7B,EAEmC,IAFnC,EAEyC,KAFzC,EAGb,IAHa,EAGP,IAHO,EAGD,IAHC,EAGK,IAHL,EAGW,IAHX,EAGiB,IAHjB,EAGuB,IAHvB,EAG6B,IAH7B,EAGmC,IAHnC,EAGyC,KAHzC,EAIb,IAJa,EAIP,IAJO,EAID,IAJC,EAIK,IAJL,EAIW,IAJX,EAIiB,IAJjB,EAIuB,IAJvB,EAI6B,IAJ7B,EAImC,IAJnC,EAIyC,KAJzC,EAKb,IALa,EAKP,IALO,EAKD,IALC,EAKK,IALL,EAKW,IALX,EAKiB,IALjB,EAKuB,IALvB,EAK6B,IAL7B,EAKmC,IALnC,EAKyC,KALzC,EAMb,IANa,EAMP,IANO,EAMD,IANC,EAMK,IANL,EAMW,IANX,EAMiB,IANjB,EAMuB,IANvB,EAM6B,IAN7B,EAMmC,IANnC,EAMyC,KANzC,EAOb,IAPa,EAOP,IAPO,EAOD,IAPC,EAOK,IAPL,EAOW,IAPX,EAOiB,IAPjB,EAOuB,IAPvB,EAO6B,IAP7B,EAOmC,IAPnC,EAOyC,KAPzC,EAQb,IARa,EAQP,IARO,EAQD,IARC,EAQK,IARL,EAQW,IARX,EAQiB,IARjB,EAQuB,IARvB,EAQ6B,IAR7B,EAQmC,IARnC,EAQyC,KARzC,EASb,IATa,EASP,IATO,EASD,IATC,EASK,IATL,EASW,IATX,EASiB,IATjB,EASuB,IATvB,EAS6B,IAT7B,EASmC,IATnC,EASyC,KATzC,CAA7B;AAYE,QAAIC,kBAAkB,GAAG,EAAzB;AAEA,QAAIC,cAAc,GAAG,EAArB;;AAEA,UAAMC,4BAA4B,GAAE,CAAC,MAAK;AACxC,UAAIC,gBAAgB,GAAGJ,oBAAoB,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcP,oBAAoB,CAACnD,MAA9C,CAAD,CAA3C;AACAqD,MAAAA,cAAc,CAACpD,IAAf,CAAoBsD,gBAApB;AAED,KAJmC,GAApC;;AAMA,QAAI/C,OAAO,GAAG,CAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2C,kBAAkB,CAACpD,MAAvC,EAA8CS,CAAC,EAA/C,EAAmD;AACjD,UAAI2C,kBAAkB,CAAC3C,CAAD,CAAlB,KAA0B4C,cAAc,CAAC,CAAD,CAA5C,EAAiD;AAC/C7C,QAAAA,OAAO,IAAI,CAAX;AACD;AACF;;AAED,QAAIA,OAAO,KAAK4C,kBAAkB,CAACpD,MAAnC,EAA2C;AACzCoD,MAAAA,kBAAkB,GAAGA,kBAAkB,CAACJ,MAAnB,CAA0BK,cAA1B,CAArB;AACAJ,MAAAA,WAAW,CAACxB,qBAAZ,CAAkC4B,cAAc,CAAC,CAAD,CAAhD;AACD,KAHD,MAGO;AACLD,MAAAA,kBAAkB,GAAGA,kBAAkB,CAACJ,MAAnB,CAA0BK,cAA1B,CAArB;AACD;;AAEDA,IAAAA,cAAc,GAAG,EAAjB;AAEA,WAAO;AAAC7C,MAAAA,OAAD;AAAU6C,MAAAA,cAAV;AAA0BD,MAAAA;AAA1B,KAAP;AAEH,GA3CC;;AA6CA,QAAMO,oBAAoB,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,KAAvD,EACZ,IADY,EACN,IADM,EACA,IADA,EACM,IADN,EACY,IADZ,EACkB,IADlB,EACwB,IADxB,EAC8B,IAD9B,EACoC,IADpC,EAC0C,KAD1C,EAEZ,IAFY,EAEN,IAFM,EAEA,IAFA,EAEM,IAFN,EAEY,IAFZ,EAEkB,IAFlB,EAEwB,IAFxB,EAE8B,IAF9B,EAEoC,IAFpC,EAE0C,KAF1C,EAGZ,IAHY,EAGN,IAHM,EAGA,IAHA,EAGM,IAHN,EAGY,IAHZ,EAGkB,IAHlB,EAGwB,IAHxB,EAG8B,IAH9B,EAGoC,IAHpC,EAG0C,KAH1C,EAIZ,IAJY,EAIN,IAJM,EAIA,IAJA,EAIM,IAJN,EAIY,IAJZ,EAIkB,IAJlB,EAIwB,IAJxB,EAI8B,IAJ9B,EAIoC,IAJpC,EAI0C,KAJ1C,EAKZ,IALY,EAKN,IALM,EAKA,IALA,EAKM,IALN,EAKY,IALZ,EAKkB,IALlB,EAKwB,IALxB,EAK8B,IAL9B,EAKoC,IALpC,EAK0C,KAL1C,EAMZ,IANY,EAMN,IANM,EAMA,IANA,EAMM,IANN,EAMY,IANZ,EAMkB,IANlB,EAMwB,IANxB,EAM8B,IAN9B,EAMoC,IANpC,EAM0C,KAN1C,EAOZ,IAPY,EAON,IAPM,EAOA,IAPA,EAOM,IAPN,EAOY,IAPZ,EAOkB,IAPlB,EAOwB,IAPxB,EAO8B,IAP9B,EAOoC,IAPpC,EAO0C,KAP1C,EAQZ,IARY,EAQN,IARM,EAQA,IARA,EAQM,IARN,EAQY,IARZ,EAQkB,IARlB,EAQwB,IARxB,EAQ8B,IAR9B,EAQoC,IARpC,EAQ0C,KAR1C,EASZ,IATY,EASN,IATM,EASA,IATA,EASM,IATN,EASY,IATZ,EASkB,IATlB,EASwB,IATxB,EAS8B,IAT9B,EASoC,IATpC,EAS0C,KAT1C,CAA7B;AAcAlE,EAAAA,SAAS,CAAC,MAAO;AAEf,QAAImE,QAAQ,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,MAAhC,CAAf;;AAGA,SAAK,IAAIrD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmD,QAAQ,CAAC5D,MAA7B,EAAqC,EAAES,CAAvC,EAA0C;AACxCmD,MAAAA,QAAQ,CAACnD,CAAD,CAAR,CAAYsD,gBAAZ,CAA6B,OAA7B,EAAsCC,WAAtC;;AACA,UAAGvB,aAAa,CAACZ,oBAAd,CAAmCoC,IAAnC,CAAwCC,iBAAiB,IAAGN,QAAQ,CAACnD,CAAD,CAAR,CAAY0D,EAAZ,KAAoBD,iBAAhF,KACHzB,aAAa,CAACV,uBAAd,CAAsCkC,IAAtC,CAA2CC,iBAAiB,IAAGN,QAAQ,CAACnD,CAAD,CAAR,CAAY0D,EAAZ,KAAoBD,iBAAnF,CADG,IAEHzB,aAAa,CAACR,oBAAd,CAAmCgC,IAAnC,CAAwCC,iBAAiB,IAAGN,QAAQ,CAACnD,CAAD,CAAR,CAAY0D,EAAZ,KAAoBD,iBAAhF,CAFG,IAGHzB,aAAa,CAACN,sBAAd,CAAqC8B,IAArC,CAA0CC,iBAAiB,IAAGN,QAAQ,CAACnD,CAAD,CAAR,CAAY0D,EAAZ,KAAoBD,iBAAlF,CAHG,IAIHzB,aAAa,CAACJ,sBAAd,CAAqC4B,IAArC,CAA0CC,iBAAiB,IAAGN,QAAQ,CAACnD,CAAD,CAAR,CAAY0D,EAAZ,KAAoBD,iBAAlF,CAJA,EAKE;AACA,YAAGN,QAAQ,CAACnD,CAAD,CAAR,CAAY2D,UAAZ,CAAuBD,EAAvB,KAA8B,mBAAjC,EAAsD;AACpDP,UAAAA,QAAQ,CAACnD,CAAD,CAAR,CAAY4D,KAAZ,CAAkBC,eAAlB,GAAoC,MAApC;AACD;AACF;AACF;;AAGD,aAASN,WAAT,GAAuB;AAEnB,WAAKK,KAAL,CAAWC,eAAX,GAA6B,QAA7B;;AACA,UAAG7B,aAAa,CAACZ,oBAAd,CAAmCoC,IAAnC,CAAwCC,iBAAiB,IAAG,KAAKC,EAAL,KAAaD,iBAAzE,KACHzB,aAAa,CAACV,uBAAd,CAAsCkC,IAAtC,CAA2CC,iBAAiB,IAAG,KAAKC,EAAL,KAAaD,iBAA5E,CADG,IAEHzB,aAAa,CAACR,oBAAd,CAAmCgC,IAAnC,CAAwCC,iBAAiB,IAAG,KAAKC,EAAL,KAAaD,iBAAzE,CAFG,IAGHzB,aAAa,CAACN,sBAAd,CAAqC8B,IAArC,CAA0CC,iBAAiB,IAAG,KAAKC,EAAL,KAAaD,iBAA3E,CAHG,IAIHzB,aAAa,CAACJ,sBAAd,CAAqC4B,IAArC,CAA0CC,iBAAiB,IAAG,KAAKC,EAAL,KAAaD,iBAA3E,CAJA,EAKE;AACA,aAAKG,KAAL,CAAWC,eAAX,GAA6B,KAA7B;AACD;AACJ;AACF,GAhCQ,CAAT;;AAkCA,QAAMC,SAAS,GAAG,CAAC,MAAM;AACvB,QAAIC,SAAS,GAAG,CAAhB;AACA,UAAMC,IAAI,GAAG/B,MAAM,EAAnB;AACA,UAAMgC,KAAK,GAAGxB,cAAc,EAA5B;AACAyB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,WAAO;AAACH,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAP;AACD,GANiB,GAAlB;;AASA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,EAAE,EAAC,mBAA9B;AAAA,gBACGf,oBAAoB,CAACkB,GAArB,CAA0BC,mBAAD,IAAyB;AAEnD,4BAAO;AAAK,UAAA,SAAS,EAAC,MAAf;AAAgD,UAAA,EAAE,EAAEA,mBAApD;AAAyE,wBAAW,QAApF;AACP,UAAA,KAAK,EAAE;AAACR,YAAAA,eAAe,EAAE;AAAlB;AADA,WAA2BQ,mBAA3B;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGC,OALA;AADH;AAAA;AAAA;AAAA;AAAA,YALF,eAgBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,EAAE,EAAC,qBAA9B;AAAA,gBACGnB,oBAAoB,CAACkB,GAArB,CAA0BC,mBAAD,IAAyB;AACnD,4BAAO;AAAK,UAAA,SAAS,EAAC,MAAf;AAAgD,UAAA,EAAE,EAAEA,mBAApD;AAAyE,0BAAa;AAAtF,WAA2BA,mBAA3B;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEC,OAHA;AADH;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BH,CAtZD;;GAAMpF,G;;KAAAA,G;AAyZN,eAAeA,GAAf","sourcesContent":["import './App.css'\nimport React, {useState, useEffect} from 'react';\n \nconst App = () => {\n\n  const Ship = (shipName, shipArray) => {\n      \n      let shipCoordinates = [];\n      \n      let j = 0;\n\n      while (j < shipArray.length) {\n\n        shipCoordinates.push({xCoordinate: shipArray[j], yCoordinate: shipArray[j+1], \n          hit: false, sink: false, name: shipName });\n\n        j += 2;\n\n      }\n\n      const isSunk = () => {\n        let counter = 0;\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          if (shipCoordinates[i].hit === true) {\n            counter++;\n          }\n        }\n        if (counter === shipCoordinates.length) {\n          for (let i = 0; i < shipCoordinates.length; i++) {\n            shipCoordinates[i].sink = true;\n              \n          }\n        }\n      };\n      \n\n      const hit = (xCoordinateChosenByEnemy, yCoordinateChosenByEnemy) => {  \n\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          if (shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n          shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n            shipCoordinates[i].hit = true;\n          }\n        }\n\n        isSunk(); \n        \n      };\n      \n    \n      return {shipCoordinates, hit}; \n    \n    }\n\n\n    const playerGameBoard = () => {\n\n      let allPlayerShipsAreSunk = [];\n      \n      let playerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n      const playerCarrier = Ship(\"carrier\", playerCarrierArray);\n\n      let playerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n      const playerBattleship = Ship(\"battleship\", playerBattleshipArray);\n\n      let playerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n      const playerCruiser = Ship(\"cruiser\", playerCruiserArray);\n      \n      let playerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n      const playerSubmarine = Ship(\"submarine\", playerSubmarineArray);\n        \n      let playerDestroyerArray = [\"A5\", \"B5\"];\n      const playerDestroyer = Ship(\"destroyer\", playerDestroyerArray);\n      \n      let computerPlayerMissedShots = [];\n      \n\n      const receiveComputerAttack = (xCoordinateChosenByEnemy, yCoordinateChosenByEnemy) => {\n\n        let targetFound = false;\n\n        for (let i = 0; i < playerCarrier.shipCoordinates.length; i++) {\n          \n          if (playerCarrier.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            playerCarrier.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              playerCarrier.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n          }\n        }\n        \n        for (let i = 0; i < playerBattleship.shipCoordinates.length; i++) {\n\n          if (playerBattleship.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            playerBattleship.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              playerBattleship.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < playerCruiser.shipCoordinates.length; i++) {\n\n          if (playerCruiser.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            playerCruiser.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              playerCruiser.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < playerSubmarine.shipCoordinates.length; i++) {\n\n          if (playerSubmarine.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            playerSubmarine.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              playerSubmarine.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < playerDestroyer.shipCoordinates.length; i++) {\n          \n          if (playerDestroyer.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            playerDestroyer.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              playerDestroyer.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n          }\n\n        } \n        \n        if (targetFound === false) {\n          computerPlayerMissedShots.push(xCoordinateChosenByEnemy);\n          computerPlayerMissedShots.push(yCoordinateChosenByEnemy);\n        }\n      }\n\n      return { playerBattleship, playerCruiser, playerSubmarine, playerCarrier, \n        playerDestroyer, receiveComputerAttack, computerPlayerMissedShots, allPlayerShipsAreSunk};\n    }\n\n\n    const computerGameBoard = () => {\n\n      let allComputerShipsAreSunk = [];\n\n      let computerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n      const computerCarrier = Ship(\"carrier\", computerCarrierArray);\n      \n      let computerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n      const computerBattleship = Ship(\"battleship\", computerBattleshipArray);\n      \n      let computerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n      const computerCruiser = Ship(\"cruiser\", computerCruiserArray);\n      \n      let computerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n      const computerSubmarine = Ship(\"submarine\", computerSubmarineArray);\n      \n      let computerDestroyerArray =[\"A5\", \"B5\"];\n      const computerDestroyer = Ship(\"destroyer\", computerDestroyerArray);\n      \n\n      let playerMissedShots = [];\n\n      const receivePlayerAttack = (xCoordinateChosenByEnemy, yCoordinateChosenByEnemy) => {\n\n        let targetFound = false;\n\n        \n\n        for (let i = 0; i < computerCarrier.shipCoordinates.length; i++) {\n          \n          if (computerCarrier.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            computerCarrier.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              computerCarrier.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < computerBattleship.shipCoordinates.length; i++) {\n\n          if (computerBattleship.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            computerBattleship.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              computerBattleship.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < computerCruiser.shipCoordinates.length; i++) {\n\n          if (computerCruiser.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            computerCruiser.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              computerCruiser.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < computerSubmarine.shipCoordinates.length; i++) {\n\n          if (computerSubmarine.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            computerSubmarine.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              computerSubmarine.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < computerDestroyer.shipCoordinates.length; i++) {\n\n          if (computerDestroyer.shipCoordinates[i].xCoordinate === xCoordinateChosenByEnemy && \n            computerDestroyer.shipCoordinates[i].yCoordinate === yCoordinateChosenByEnemy) {\n              computerDestroyer.hit(xCoordinateChosenByEnemy, yCoordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n          }\n        } \n        \n        if (targetFound === false) {\n          playerMissedShots.push(xCoordinateChosenByEnemy);\n          playerMissedShots.push(yCoordinateChosenByEnemy);\n        }\n        \n      }\n      \n      \n      return {computerCarrier, computerBattleship, computerCruiser, computerSubmarine, computerDestroyer, \n        receivePlayerAttack, \n        playerMissedShots, allComputerShipsAreSunk, computerCarrierArray, computerBattleshipArray, computerCruiserArray,\n      computerSubmarineArray, computerDestroyerArray}\n    }\n\n\n    const computerShips = computerGameBoard();\n\n\n    const player = () => { \n\n      let allPlayerChoices = [];\n      \n      let playerChoice = [];\n      \n      function askForPlayerInput() {\n\n        let x = 1;\n\n        playerChoice.push(x);\n\n      }\n      \n      let count = 0;\n\n      for (let i = 0; i < allPlayerChoices.length; i++) {\n        if (allPlayerChoices[i] !== playerChoice[0]) {\n          count += 1;        \n        } \n      }\n\n      if (count === allPlayerChoices.length) {\n        allPlayerChoices = allPlayerChoices.concat(playerChoice);\n        computerShips.receivePlayerAttack(playerChoice[0]);\n\n      } else {\n\n        allPlayerChoices = allPlayerChoices.concat(playerChoice);\n      }\n\n      playerChoice = [];\n\n      return {count, playerChoice, allPlayerChoices}\n\n    }\n\n\n    const playerShips = playerGameBoard();\n\n\n    const computerPlayer = () => {\n\n    const availableCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\",\n                    \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\",\n                    \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\",\n                    \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\",\n                    \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\",\n                    \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n                    \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\",\n                    \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\",\n                    \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\",\n                    \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\",\n                  ];\n\n      let allComputerChoices = [];\n      \n      let computerChoice = [];\n      \n      const chooseRandomElementFromArray =(()=> {\n        let oneRandomElement = availableCoordinates[Math.floor(Math.random()*availableCoordinates.length)];\n        computerChoice.push(oneRandomElement);\n\n      })();\n        \n      let counter = 0;\n\n      for (let i = 0; i < allComputerChoices.length;i++) {\n        if (allComputerChoices[i] !== computerChoice[0]) {\n          counter += 1;        \n        } \n      }\n\n      if (counter === allComputerChoices.length) {\n        allComputerChoices = allComputerChoices.concat(computerChoice);\n        playerShips.receiveComputerAttack(computerChoice[0]);\n      } else {\n        allComputerChoices = allComputerChoices.concat(computerChoice);\n      }\n\n      computerChoice = [];\n\n      return {counter, computerChoice, allComputerChoices}\n  \n  }\n\n    const gameBoardCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\",\n                     \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\",\n                     \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\",\n                     \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\",\n                     \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\",\n                     \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n                     \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\",\n                     \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\",\n                     \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\",\n                     \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\",\n                    ];\n\n    \n\n    useEffect(() =>  {\n    \n      let elements = document.getElementsByClassName('grid');\n    \n      \n      for (let i = 0; i < elements.length; ++i) {\n        elements[i].addEventListener('click', changeColor)  \n        if(computerShips.computerCarrierArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        computerShips.computerBattleshipArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        computerShips.computerCruiserArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        computerShips.computerSubmarineArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        computerShips.computerDestroyerArray.some(particularElement=> elements[i].id === (particularElement))\n        ) {\n          if(elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"blue\";\n          }\n        }\n      }\n\n      \n      function changeColor() {\n\n          this.style.backgroundColor = \"yellow\";\n          if(computerShips.computerCarrierArray.some(particularElement=> this.id === (particularElement)) ||\n          computerShips.computerBattleshipArray.some(particularElement=> this.id === (particularElement)) ||\n          computerShips.computerCruiserArray.some(particularElement=> this.id === (particularElement)) ||\n          computerShips.computerSubmarineArray.some(particularElement=> this.id === (particularElement)) ||\n          computerShips.computerDestroyerArray.some(particularElement=> this.id === (particularElement))\n          ) {\n            this.style.backgroundColor = \"red\";\n          }\n      }\n    })\n  \n    const gameLogic = (() => {\n      let whoseTurn = 0;\n      const Jeff = player();\n      const Alpha = computerPlayer();\n      console.log(\"you are here\")\n      return {Jeff, Alpha};\n    })();\n\n\n    return(\n      <div>\n        <h1>Project Battleship Game</h1>\n        <h2>Player Fleet V.S. Computer Fleet</h2>\n  \n    \n        <div className=\"container\" id=\"player-game-board\">\n          {gameBoardCoordinates.map((gameBoardCoordinate) => {\n \n          return <div className=\"grid\" key={gameBoardCoordinate} id={gameBoardCoordinate} data-color=\"yellow\"\n          style={{backgroundColor: \"white\"}}\n          ></div>\n          })}\n        </div>\n          \n\n\n        <div className=\"container\" id=\"computer-game-board\">\n          {gameBoardCoordinates.map((gameBoardCoordinate) => {\n          return <div className=\"grid\" key={gameBoardCoordinate} id={gameBoardCoordinate} missed-color=\"yellow\"\n          ></div>\n          })}\n        </div>\n\n\n      </div>\n    )\n}\n\n\nexport default App;\n  \n\n\n  \n\n\n\n"]},"metadata":{},"sourceType":"module"}