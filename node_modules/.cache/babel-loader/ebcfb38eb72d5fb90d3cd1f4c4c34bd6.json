{"ast":null,"code":"var _jsxFileName = \"/Users/loulau/Documents/react/project-battleship-game/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const Ship = (shipName, shipArray) => {\n    let shipCoordinates = [];\n    let j = 0;\n\n    while (j < shipArray.length) {\n      shipCoordinates.push({\n        coordinate: shipArray[j],\n        hit: false,\n        sink: false,\n        name: shipName\n      });\n      j++;\n    }\n\n    const isSunk = () => {\n      let counter = 0;\n\n      for (let i = 0; i < shipCoordinates.length; i++) {\n        if (shipCoordinates[i].hit === true) {\n          counter++;\n        }\n      }\n\n      if (counter === shipCoordinates.length) {\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          shipCoordinates[i].sink = true;\n        }\n      }\n    };\n\n    const hit = coordinateChosenByEnemy => {\n      for (let i = 0; i < shipCoordinates.length; i++) {\n        if (shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          shipCoordinates[i].hit = true;\n        }\n      }\n\n      isSunk();\n    };\n\n    return {\n      shipCoordinates,\n      hit\n    };\n  };\n\n  const playerGameBoard = () => {\n    let allPlayerShipsAreSunk = [];\n    let playerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n    const playerCarrier = Ship(\"carrier\", playerCarrierArray);\n    let playerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n    const playerBattleship = Ship(\"battleship\", playerBattleshipArray);\n    let playerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n    const playerCruiser = Ship(\"cruiser\", playerCruiserArray);\n    let playerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n    const playerSubmarine = Ship(\"submarine\", playerSubmarineArray);\n    let playerDestroyerArray = [\"A5\", \"B5\"];\n    const playerDestroyer = Ship(\"destroyer\", playerDestroyerArray);\n    let computerPlayerMissedShots = [];\n    let computerPlayerHitShots = [];\n\n    const receiveComputerAttack = coordinateChosenByEnemy => {\n      let targetFound = false;\n\n      for (let i = 0; i < playerCarrier.shipCoordinates.length; i++) {\n        if (playerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerCarrier.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n          computerPlayerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < playerBattleship.shipCoordinates.length; i++) {\n        if (playerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerBattleship.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n          computerPlayerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < playerCruiser.shipCoordinates.length; i++) {\n        if (playerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerCruiser.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < playerSubmarine.shipCoordinates.length; i++) {\n        if (playerSubmarine.shipCoordinates[i].xCoordinate === coordinateChosenByEnemy) {\n          playerSubmarine.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      for (let i = 0; i < playerDestroyer.shipCoordinates.length; i++) {\n        if (playerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          playerDestroyer.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allPlayerShipsAreSunk.push(\"hit\");\n        }\n      }\n\n      if (targetFound === false) {\n        computerPlayerMissedShots.push(coordinateChosenByEnemy);\n      }\n    };\n\n    return {\n      playerBattleship,\n      playerCruiser,\n      playerSubmarine,\n      playerCarrier,\n      playerDestroyer,\n      receiveComputerAttack,\n      computerPlayerMissedShots,\n      allPlayerShipsAreSunk\n    };\n  };\n\n  const computerGameBoard = () => {\n    let allComputerShipsAreSunk = [];\n    let computerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n    const computerCarrier = Ship(\"carrier\", computerCarrierArray);\n    let computerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n    const computerBattleship = Ship(\"battleship\", computerBattleshipArray);\n    let computerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n    const computerCruiser = Ship(\"cruiser\", computerCruiserArray);\n    let computerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n    const computerSubmarine = Ship(\"submarine\", computerSubmarineArray);\n    let computerDestroyerArray = [\"A5\", \"B5\"];\n    const computerDestroyer = Ship(\"destroyer\", computerDestroyerArray);\n    let playerMissedShots = [];\n    let playerHitShots = [];\n\n    const receivePlayerAttack = coordinateChosenByEnemy => {\n      let targetFound = false;\n\n      for (let i = 0; i < computerCarrier.shipCoordinates.length; i++) {\n        if (computerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerCarrier.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < computerBattleship.shipCoordinates.length; i++) {\n        if (computerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerBattleship.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < computerCruiser.shipCoordinates.length; i++) {\n        if (computerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerCruiser.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < computerSubmarine.shipCoordinates.length; i++) {\n        if (computerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerSubmarine.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      for (let i = 0; i < computerDestroyer.shipCoordinates.length; i++) {\n        if (computerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n          computerDestroyer.hit(coordinateChosenByEnemy);\n          targetFound = true;\n          allComputerShipsAreSunk.push(\"hit\");\n          playerHitShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      if (targetFound === false) {\n        playerMissedShots.push(coordinateChosenByEnemy);\n      }\n    };\n\n    return {\n      computerCarrier,\n      computerBattleship,\n      computerCruiser,\n      computerSubmarine,\n      computerDestroyer,\n      receivePlayerAttack,\n      playerMissedShots,\n      allComputerShipsAreSunk,\n      computerCarrierArray,\n      computerBattleshipArray,\n      computerCruiserArray,\n      computerSubmarineArray,\n      computerDestroyerArray\n    };\n  };\n\n  const player = () => {\n    const computerShips = computerGameBoard();\n    let allPlayerChoices = [];\n    let playerChoice = [];\n    let x = \"A9\"; //should be player input, use A9 as a example instead\n\n    playerChoice.push(x);\n    let count = 0;\n\n    for (let i = 0; i < allPlayerChoices.length; i++) {\n      if (allPlayerChoices[i] !== playerChoice[0]) {\n        count += 1;\n      }\n    }\n\n    if (count === allPlayerChoices.length) {\n      allPlayerChoices = allPlayerChoices.concat(playerChoice);\n      computerShips.receivePlayerAttack(playerChoice[0]);\n    } else {\n      allPlayerChoices = allPlayerChoices.concat(playerChoice);\n    }\n\n    playerChoice = [];\n    return {\n      computerShips,\n      playerChoice,\n      allPlayerChoices\n    };\n  };\n\n  const computerPlayer = () => {\n    // call factory function\n    const playerShips = playerGameBoard();\n    const availableCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\", \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\", \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\", \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\", \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\", \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\"];\n    let allComputerChoices = [];\n    let computerChoice = [];\n    let counter = 0;\n    let oneRandomElement = availableCoordinates[Math.floor(Math.random() * availableCoordinates.length)];\n    computerChoice.push(oneRandomElement);\n\n    for (let i = 0; i < allComputerChoices.length; i++) {\n      if (allComputerChoices[i] !== computerChoice[0]) {\n        counter += 1;\n      }\n    }\n\n    if (counter === allComputerChoices.length) {\n      allComputerChoices = allComputerChoices.concat(computerChoice);\n      playerShips.receiveComputerAttack(computerChoice[0]);\n    } else {\n      allComputerChoices = allComputerChoices.concat(computerChoice);\n    }\n\n    computerChoice = [];\n    return {\n      computerChoice,\n      allComputerChoices,\n      playerShips\n    };\n  };\n\n  const jeff = player();\n  const watson = computerPlayer();\n  console.log(jeff.computerShips.playerMissedShots);\n  console.log(watson.playerShips.computerPlayerMissedShots); //gameboard coordinates for dom manipulation    \n\n  const gameBoardCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\", \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\", \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\", \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\", \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\", \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\", \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\", \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\", \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\"];\n  useEffect(() => {\n    let elements = document.getElementsByClassName('grid'); //player fleet should show up on the grid, not computer ones\n\n    for (let i = 0; i < elements.length; ++i) {\n      elements[i].addEventListener('click', changeColor); //hide coordinates on computer gameboard \n\n      if (jeff.computerShips.computerCarrierArray.some(particularElement => elements[i].id === particularElement) || jeff.computerShips.computerBattleshipArray.some(particularElement => elements[i].id === particularElement) || jeff.computerShips.computerCruiserArray.some(particularElement => elements[i].id === particularElement) || jeff.computerShips.computerSubmarineArray.some(particularElement => elements[i].id === particularElement) || jeff.computerShips.computerDestroyerArray.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"player-game-board\") {\n          elements[i].style.backgroundColor = \"blue\";\n        }\n      }\n\n      if (jeff.computerShips.playerMissedShots.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"computer-game-board\") {\n          elements[i].style.backgroundColor = \"yellow\";\n        }\n      }\n\n      if (watson.playerShips.computerPlayerMissedShots.some(particularElement => elements[i].id === particularElement)) {\n        if (elements[i].parentNode.id === \"player-game-board\") {\n          elements[i].style.backgroundColor = \"yellow\";\n        }\n      }\n      /*\n      if(watson.playerShips.playerCarrierArray.some(particularElement=> this.id === (particularElement)) ||\n      watson.playerShips.playerBattleshipArray.some(particularElement=> this.id === (particularElement)) ||\n      watson.playerShips.playerCruiserArray.some(particularElement=> this.id === (particularElement)) ||\n      watson.playerShips.playerSubmarineArray.some(particularElement=> this.id === (particularElement)) ||\n      watson.playerShips.playerDestroyerArray.some(particularElement=> this.id === (particularElement))\n      ) {\n        this.style.backgroundColor = \"red\";\n      } \n      */\n\n    } //change yellow when there is a miss, red when there is a hit\n\n\n    function changeColor() {\n      if (this.parentNode.id === \"computer-game-board\") {\n        this.style.backgroundColor = \"yellow\";\n\n        if (jeff.computerShips.computerCarrierArray.some(particularElement => this.id === particularElement) || jeff.computerShips.computerBattleshipArray.some(particularElement => this.id === particularElement) || jeff.computerShips.computerCruiserArray.some(particularElement => this.id === particularElement) || jeff.computerShips.computerSubmarineArray.some(particularElement => this.id === particularElement) || jeff.computerShips.computerDestroyerArray.some(particularElement => this.id === particularElement)) {\n          this.style.backgroundColor = \"red\";\n        }\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Battleship Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player Fleet V.S. Computer Fleet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"player-game-board\",\n      children: gameBoardCoordinates.map(gameBoardCoordinate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          id: gameBoardCoordinate,\n          \"data-color\": \"yellow\",\n          style: {\n            backgroundColor: \"white\"\n          }\n        }, gameBoardCoordinate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      id: \"computer-game-board\",\n      children: gameBoardCoordinates.map(gameBoardCoordinate => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid\",\n          id: gameBoardCoordinate,\n          \"missed-color\": \"yellow\"\n        }, gameBoardCoordinate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/loulau/Documents/react/project-battleship-game/src/App.js"],"names":["React","useState","useEffect","App","Ship","shipName","shipArray","shipCoordinates","j","length","push","coordinate","hit","sink","name","isSunk","counter","i","coordinateChosenByEnemy","playerGameBoard","allPlayerShipsAreSunk","playerCarrierArray","playerCarrier","playerBattleshipArray","playerBattleship","playerCruiserArray","playerCruiser","playerSubmarineArray","playerSubmarine","playerDestroyerArray","playerDestroyer","computerPlayerMissedShots","computerPlayerHitShots","receiveComputerAttack","targetFound","xCoordinate","computerGameBoard","allComputerShipsAreSunk","computerCarrierArray","computerCarrier","computerBattleshipArray","computerBattleship","computerCruiserArray","computerCruiser","computerSubmarineArray","computerSubmarine","computerDestroyerArray","computerDestroyer","playerMissedShots","playerHitShots","receivePlayerAttack","player","computerShips","allPlayerChoices","playerChoice","x","count","concat","computerPlayer","playerShips","availableCoordinates","allComputerChoices","computerChoice","oneRandomElement","Math","floor","random","jeff","watson","console","log","gameBoardCoordinates","elements","document","getElementsByClassName","addEventListener","changeColor","some","particularElement","id","parentNode","style","backgroundColor","map","gameBoardCoordinate"],"mappings":"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","sourcesContent":["import './App.css'\nimport React, {useState, useEffect} from 'react';\n \nconst App = () => {\n\n  const Ship = (shipName, shipArray) => {\n      \n      let shipCoordinates = [];\n      \n      let j = 0;\n\n      while (j < shipArray.length) {\n\n        shipCoordinates.push({coordinate: shipArray[j], hit: false, sink: false, name: shipName });\n\n        j++;\n\n      }\n\n      const isSunk = () => {\n        let counter = 0;\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          if (shipCoordinates[i].hit === true) {\n            counter++;\n          }\n        }\n        if (counter === shipCoordinates.length) {\n          for (let i = 0; i < shipCoordinates.length; i++) {\n            shipCoordinates[i].sink = true;\n              \n          }\n        }\n      };\n      \n\n      const hit = (coordinateChosenByEnemy) => {  \n\n        for (let i = 0; i < shipCoordinates.length; i++) {\n          if (shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n            shipCoordinates[i].hit = true;\n          }\n        }\n\n        isSunk(); \n      };\n      \n      return {shipCoordinates, hit}; \n    }\n\n\n    const playerGameBoard = () => {\n\n      let allPlayerShipsAreSunk = [];\n      \n      let playerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n      const playerCarrier = Ship(\"carrier\", playerCarrierArray);\n\n      let playerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n      const playerBattleship = Ship(\"battleship\", playerBattleshipArray);\n\n      let playerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n      const playerCruiser = Ship(\"cruiser\", playerCruiserArray);\n      \n      let playerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n      const playerSubmarine = Ship(\"submarine\", playerSubmarineArray);\n        \n      let playerDestroyerArray = [\"A5\", \"B5\"];\n      const playerDestroyer = Ship(\"destroyer\", playerDestroyerArray);\n      \n      let computerPlayerMissedShots = [];\n\n      let computerPlayerHitShots = [];\n      \n      const receiveComputerAttack = (coordinateChosenByEnemy) => {\n\n        let targetFound = false;\n\n        for (let i = 0; i < playerCarrier.shipCoordinates.length; i++) {\n          \n          if (playerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerCarrier.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n        \n        for (let i = 0; i < playerBattleship.shipCoordinates.length; i++) {\n\n          if (playerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerBattleship.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n              computerPlayerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < playerCruiser.shipCoordinates.length; i++) {\n\n          if (playerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerCruiser.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < playerSubmarine.shipCoordinates.length; i++) {\n\n          if (playerSubmarine.shipCoordinates[i].xCoordinate === coordinateChosenByEnemy) {\n              playerSubmarine.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n          }\n        }\n\n        for (let i = 0; i < playerDestroyer.shipCoordinates.length; i++) {\n          \n          if (playerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              playerDestroyer.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allPlayerShipsAreSunk.push(\"hit\");\n          }\n\n        } \n        \n        if (targetFound === false) {\n          computerPlayerMissedShots.push(coordinateChosenByEnemy);\n        }\n      }\n\n      return { playerBattleship, playerCruiser, playerSubmarine, playerCarrier, \n        playerDestroyer, receiveComputerAttack, computerPlayerMissedShots, allPlayerShipsAreSunk};\n    }\n\n    const computerGameBoard = () => {\n\n      let allComputerShipsAreSunk = [];\n\n      let computerCarrierArray = [\"A1\", \"B1\", \"C1\", \"D1\", \"E1\"];\n      const computerCarrier = Ship(\"carrier\", computerCarrierArray);\n      \n      let computerBattleshipArray = [\"A2\", \"B2\", \"C2\", \"D2\", \"E2\"];\n      const computerBattleship = Ship(\"battleship\", computerBattleshipArray);\n      \n      let computerCruiserArray = [\"A3\", \"B3\", \"C3\"];\n      const computerCruiser = Ship(\"cruiser\", computerCruiserArray);\n      \n      let computerSubmarineArray = [\"A4\", \"B4\", \"C4\"];\n      const computerSubmarine = Ship(\"submarine\", computerSubmarineArray);\n      \n      let computerDestroyerArray =[\"A5\", \"B5\"];\n      const computerDestroyer = Ship(\"destroyer\", computerDestroyerArray);\n      \n\n      let playerMissedShots = [];\n      let playerHitShots = [];\n\n      const receivePlayerAttack = (coordinateChosenByEnemy) => {\n\n        let targetFound = false;\n\n        for (let i = 0; i < computerCarrier.shipCoordinates.length; i++) {\n          \n          if (computerCarrier.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerCarrier.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < computerBattleship.shipCoordinates.length; i++) {\n\n          if (computerBattleship.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerBattleship.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < computerCruiser.shipCoordinates.length; i++) {\n\n          if (computerCruiser.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerCruiser.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < computerSubmarine.shipCoordinates.length; i++) {\n\n          if (computerSubmarine.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerSubmarine.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        }\n\n        for (let i = 0; i < computerDestroyer.shipCoordinates.length; i++) {\n\n          if (computerDestroyer.shipCoordinates[i].coordinate === coordinateChosenByEnemy) {\n              computerDestroyer.hit(coordinateChosenByEnemy); \n              targetFound = true;\n              allComputerShipsAreSunk.push(\"hit\");\n              playerHitShots.push(coordinateChosenByEnemy);\n          }\n        } \n        \n        if (targetFound === false) {\n          playerMissedShots.push(coordinateChosenByEnemy);\n\n        }\n        \n      }\n      \n      return {computerCarrier, computerBattleship, computerCruiser, computerSubmarine, computerDestroyer, \n        receivePlayerAttack, \n        playerMissedShots, allComputerShipsAreSunk, \n        computerCarrierArray, computerBattleshipArray, computerCruiserArray,\n        computerSubmarineArray, computerDestroyerArray}\n    \n    }\n\n\n    \n\n\n    const player = () => { \n\n      const computerShips = computerGameBoard();\n\n      let allPlayerChoices = [];\n      \n      let playerChoice = [];\n      \n      let x = \"A9\"; //should be player input, use A9 as a example instead\n\n      playerChoice.push(x);\n      \n      let count = 0;\n\n      for (let i = 0; i < allPlayerChoices.length; i++) {\n        if (allPlayerChoices[i] !== playerChoice[0]) {\n          count += 1;        \n        } \n      }\n\n      if (count === allPlayerChoices.length) {\n        allPlayerChoices = allPlayerChoices.concat(playerChoice);\n        computerShips.receivePlayerAttack(playerChoice[0]);\n      } else {\n        allPlayerChoices = allPlayerChoices.concat(playerChoice);\n      }\n\n      playerChoice = [];\n\n      return {computerShips, playerChoice, allPlayerChoices}\n\n    }\n   \n\n    const computerPlayer = () => {\n\n      // call factory function\n      const playerShips = playerGameBoard();\n\n      const availableCoordinates = [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\",\n                      \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\",\n                      \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\",\n                      \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\",\n                      \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\",\n                      \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n                      \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\",\n                      \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\",\n                      \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\",\n                      \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\",\n                    ];\n\n      let allComputerChoices = [];\n      \n      let computerChoice = [];\n      \n      let counter = 0;\n\n\n\n      let oneRandomElement = availableCoordinates[Math.floor(Math.random()*availableCoordinates.length)];\n      computerChoice.push(oneRandomElement);\n      \n      \n      for (let i = 0; i < allComputerChoices.length;i++) {\n        if (allComputerChoices[i] !== computerChoice[0]) {\n          counter += 1;        \n        } \n      }\n\n      if (counter === allComputerChoices.length) {\n        allComputerChoices = allComputerChoices.concat(computerChoice);\n        playerShips.receiveComputerAttack(computerChoice[0]);\n      } else {\n        allComputerChoices = allComputerChoices.concat(computerChoice);\n      }\n\n      computerChoice = [];\n      \n    \n  \n    return {computerChoice, allComputerChoices, playerShips}\n  \n  };\n\n  const jeff = player(); \n  const watson = computerPlayer();\n\n  console.log(jeff.computerShips.playerMissedShots);\n  console.log(watson.playerShips.computerPlayerMissedShots);\n\n    //gameboard coordinates for dom manipulation    \n    const gameBoardCoordinates = \n                    [\"A1\", \"A2\", \"A3\", \"A4\", \"A5\", \"A6\", \"A7\", \"A8\", \"A9\", \"A10\",\n                     \"B1\", \"B2\", \"B3\", \"B4\", \"B5\", \"B6\", \"B7\", \"B8\", \"B9\", \"B10\",\n                     \"C1\", \"C2\", \"C3\", \"C4\", \"C5\", \"C6\", \"C7\", \"C8\", \"C9\", \"C10\",\n                     \"D1\", \"D2\", \"D3\", \"D4\", \"D5\", \"D6\", \"D7\", \"D8\", \"D9\", \"D10\",\n                     \"E1\", \"E2\", \"E3\", \"E4\", \"E5\", \"E6\", \"E7\", \"E8\", \"E9\", \"E10\",\n                     \"F1\", \"F2\", \"F3\", \"F4\", \"F5\", \"F6\", \"F7\", \"F8\", \"F9\", \"F10\",\n                     \"G1\", \"G2\", \"G3\", \"G4\", \"G5\", \"G6\", \"G7\", \"G8\", \"G9\", \"G10\",\n                     \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"H7\", \"H8\", \"H9\", \"H10\",\n                     \"I1\", \"I2\", \"I3\", \"I4\", \"I5\", \"I6\", \"I7\", \"I8\", \"I9\", \"I10\",\n                     \"J1\", \"J2\", \"J3\", \"J4\", \"J5\", \"J6\", \"J7\", \"J8\", \"J9\", \"J10\",\n                    ];\n    \n    \n    useEffect(() =>  {\n    \n      let elements = document.getElementsByClassName('grid');\n    \n      //player fleet should show up on the grid, not computer ones\n      for (let i = 0; i < elements.length; ++i) {\n        elements[i].addEventListener('click', changeColor); //hide coordinates on computer gameboard \n        if(jeff.computerShips.computerCarrierArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        jeff.computerShips.computerBattleshipArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        jeff.computerShips.computerCruiserArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        jeff.computerShips.computerSubmarineArray.some(particularElement=> elements[i].id === (particularElement)) ||\n        jeff.computerShips.computerDestroyerArray.some(particularElement=> elements[i].id === (particularElement))\n        ) {\n          if(elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"blue\";\n          }\n\n        }\n        if(jeff.computerShips.playerMissedShots.some(particularElement=> elements[i].id === (particularElement))) {\n          if(elements[i].parentNode.id === \"computer-game-board\") {\n            elements[i].style.backgroundColor = \"yellow\";\n          }\n        }\n        if(watson.playerShips.computerPlayerMissedShots.some(particularElement=> elements[i].id === (particularElement))) {\n          if(elements[i].parentNode.id === \"player-game-board\") {\n            elements[i].style.backgroundColor = \"yellow\";\n          }\n        }\n        /*\n        if(watson.playerShips.playerCarrierArray.some(particularElement=> this.id === (particularElement)) ||\n        watson.playerShips.playerBattleshipArray.some(particularElement=> this.id === (particularElement)) ||\n        watson.playerShips.playerCruiserArray.some(particularElement=> this.id === (particularElement)) ||\n        watson.playerShips.playerSubmarineArray.some(particularElement=> this.id === (particularElement)) ||\n        watson.playerShips.playerDestroyerArray.some(particularElement=> this.id === (particularElement))\n        ) {\n          this.style.backgroundColor = \"red\";\n        } \n        */\n      }\n\n      //change yellow when there is a miss, red when there is a hit\n      function changeColor() {\n          if(this.parentNode.id === \"computer-game-board\") {\n          this.style.backgroundColor = \"yellow\"; \n          if(jeff.computerShips.computerCarrierArray.some(particularElement=> this.id === (particularElement)) ||\n          jeff.computerShips.computerBattleshipArray.some(particularElement=> this.id === (particularElement)) ||\n          jeff.computerShips.computerCruiserArray.some(particularElement=> this.id === (particularElement)) ||\n          jeff.computerShips.computerSubmarineArray.some(particularElement=> this.id === (particularElement)) ||\n          jeff.computerShips.computerDestroyerArray.some(particularElement=> this.id === (particularElement))\n          ) {\n            this.style.backgroundColor = \"red\";\n          }\n        }\n      }\n    })\n\n\n    return(\n      <div>\n        <h1>Battleship Game</h1>\n        <h2>Player Fleet V.S. Computer Fleet</h2>\n  \n    \n        <div className=\"container\" id=\"player-game-board\">\n          {gameBoardCoordinates.map((gameBoardCoordinate) => {\n \n          return <div className=\"grid\" key={gameBoardCoordinate} id={gameBoardCoordinate} data-color=\"yellow\"\n          style={{backgroundColor: \"white\"}}\n          ></div>\n          })}\n        </div>\n          \n\n        <div className=\"container\" id=\"computer-game-board\">\n          {gameBoardCoordinates.map((gameBoardCoordinate) => {\n          return <div className=\"grid\" key={gameBoardCoordinate} id={gameBoardCoordinate} missed-color=\"yellow\"\n          ></div>\n          })}\n        </div>\n\n\n      </div>\n    )\n}\n\n\nexport default App;\n  \n\n\n  \n\n\n\n"]},"metadata":{},"sourceType":"module"}